// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
impl<'de> Deserialize<'de> for StatusMembershipCheckUserHasActiveStatusParams {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        serde_json::Value::deserialize(deserializer)?;
        Ok(StatusMembershipCheckUserHasActiveStatusParams)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct StatusMembershipCheckUserHasActiveStatusParams;
impl Schema for StatusMembershipCheckUserHasActiveStatusParams {
    fn schema() -> Value {
        serde_json::from_str("{}").unwrap()
    }
}
impl Agent for StatusMembershipCheckUserHasActiveStatusParams {
    fn topic() -> &'static str {
        "status_membership_checkUserHasActiveStatus"
    }
    fn method() -> &'static str {
        "membership_checkUserHasActiveStatus"
    }
    fn agent() -> &'static str {
        "status"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct StatusMembershipCheckUserHasActiveStatusReturns(pub bool);
impl Schema for StatusMembershipCheckUserHasActiveStatusReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for StatusMembershipCheckUserHasActiveStatusReturns {
    fn topic() -> &'static str {
        "status_membership_checkUserHasActiveStatus"
    }
    fn method() -> &'static str {
        "membership_checkUserHasActiveStatus"
    }
    fn agent() -> &'static str {
        "status"
    }
}
