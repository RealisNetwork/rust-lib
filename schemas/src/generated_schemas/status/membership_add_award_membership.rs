// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct StatusMembershipAddAwardMembershipParams {
    #[serde(rename = "appId")]
    pub app_id: i64,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "days")]
    pub days: i64,
    #[serde(rename = "membershipId")]
    pub membership_id: i64,
}
impl Schema for StatusMembershipAddAwardMembershipParams {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"appId\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"userId\":{\"type\":\"string\"},\"days\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"membershipId\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"userId\",\"appId\",\"days\",\"membershipId\"]}")
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct StatusMembershipAddAwardMembershipReturns(bool);
impl Schema for StatusMembershipAddAwardMembershipReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
