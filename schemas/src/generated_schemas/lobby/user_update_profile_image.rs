// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct LobbyUserUpdateProfileImageParams { # [serde (rename = "image")] pub image : i8 } impl Schema for LobbyUserUpdateProfileImageParams { fn schema () -> Value { serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"image\":{\"type\":\"integer\",\"minimum\":-128,\"maximum\":127,\"additionalAttributes\":{\"numberType\":\"Byte\"}}},\"required\":[\"image\"]}") . unwrap () } } impl Agent for LobbyUserUpdateProfileImageParams { fn topic () -> & 'static str { "lobby_user_updateProfileImage" } fn method () -> & 'static str { "user_updateProfileImage" } fn agent () -> & 'static str { "lobby" } fn access_level () -> AccessLevel { AccessLevel :: Protected } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct LobbyUserUpdateProfileImageReturns { # [serde (rename = "imageId")] pub image_id : i8 } impl Schema for LobbyUserUpdateProfileImageReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"imageId\":{\"type\":\"integer\",\"minimum\":-128,\"maximum\":127,\"additionalAttributes\":{\"numberType\":\"Byte\"}}},\"required\":[\"imageId\"]}") } } impl Agent for LobbyUserUpdateProfileImageReturns { fn topic () -> & 'static str { "lobby_user_updateProfileImage" } fn method () -> & 'static str { "user_updateProfileImage" } fn agent () -> & 'static str { "lobby" } fn access_level () -> AccessLevel { AccessLevel :: Protected } }