// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsUnEquipItemFromAllHeroesParams {
    #[serde(rename = "itemId")]
    pub item_id: i32,
}
impl Schema for LobbyEquipmentEndpointsUnEquipItemFromAllHeroesParams {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"itemId\":{\"type\":\"integer\",\"minimum\":-2147483648,\"maximum\":2147483647,\"additionalAttributes\":{\"numberType\":\"Int\"}}},\"required\":[\"itemId\"]}")
    }
}
impl Agent for LobbyEquipmentEndpointsUnEquipItemFromAllHeroesParams {
    fn topic() -> &'static str {
        "lobby_equipmentEndpoints_unEquipItemFromAllHeroes"
    }
    fn method() -> &'static str {
        "equipmentEndpoints_unEquipItemFromAllHeroes"
    }
    fn agent() -> &'static str {
        "lobby"
    }
}
impl<'de> Deserialize<'de> for LobbyEquipmentEndpointsUnEquipItemFromAllHeroesReturns {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        serde_json::Value::deserialize(deserializer)?;
        Ok(LobbyEquipmentEndpointsUnEquipItemFromAllHeroesReturns)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct LobbyEquipmentEndpointsUnEquipItemFromAllHeroesReturns;
impl Schema for LobbyEquipmentEndpointsUnEquipItemFromAllHeroesReturns {
    fn schema() -> Value {
        serde_json::json!("{}")
    }
}
impl Agent for LobbyEquipmentEndpointsUnEquipItemFromAllHeroesReturns {
    fn topic() -> &'static str {
        "lobby_equipmentEndpoints_unEquipItemFromAllHeroes"
    }
    fn method() -> &'static str {
        "equipmentEndpoints_unEquipItemFromAllHeroes"
    }
    fn agent() -> &'static str {
        "lobby"
    }
}
