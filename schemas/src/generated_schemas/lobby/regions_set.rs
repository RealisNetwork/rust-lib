// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct LobbyRegionsSetParams { # [serde (rename = "isFixed")] pub is_fixed : bool , # [serde (rename = "regionName")] pub region_name : String } impl Schema for LobbyRegionsSetParams { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"isFixed\":{\"type\":\"boolean\"},\"regionName\":{\"type\":\"string\"}},\"required\":[\"regionName\",\"isFixed\"]}") } } impl Agent for LobbyRegionsSetParams { fn topic () -> & 'static str { "lobby_regions_set" } fn method () -> & 'static str { "regions_set" } fn agent () -> & 'static str { "lobby" } } impl < 'de > Deserialize < 'de > for LobbyRegionsSetReturns { fn deserialize < D > (_deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { Ok (LobbyRegionsSetReturns) } } # [derive (Debug , Clone , Serialize)] pub struct LobbyRegionsSetReturns ; impl Schema for LobbyRegionsSetReturns { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for LobbyRegionsSetReturns { fn topic () -> & 'static str { "lobby_regions_set" } fn method () -> & 'static str { "regions_set" } fn agent () -> & 'static str { "lobby" } }