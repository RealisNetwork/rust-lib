// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminConfirmationAddParamsHistoryParamsParams {
    #[serde(rename = "isConfirmed")]
    pub is_confirmed: bool,
    #[serde(rename = "userId")]
    pub user_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminConfirmationAddParamsInfoMethodParamsParamsParams {}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminConfirmationAddParamsInfoMethodParams {
    #[serde(rename = "method")]
    pub method: String,
    #[serde(rename = "params")]
    pub params: AdminConfirmationAddParamsInfoMethodParamsParamsParams,
    #[serde(rename = "agent")]
    pub agent: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminConfirmationAddParams {
    #[serde(rename = "history")]
    pub history: Option<Vec<AdminConfirmationAddParamsHistoryParamsParams>>,
    #[serde(rename = "tab")]
    pub tab: String,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "isSuccess")]
    pub is_success: Option<bool>,
    #[serde(rename = "infoMethod")]
    pub info_method: AdminConfirmationAddParamsInfoMethodParams,
}
impl Schema for AdminConfirmationAddParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"history\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isConfirmed\":{\"type\":\"boolean\"},\"userId\":{\"type\":\"string\"}},\"required\":[\"userId\",\"isConfirmed\"]}},\"tab\":{\"type\":\"string\"},\"userId\":{\"type\":\"string\"},\"isSuccess\":{\"type\":\"boolean\"},\"infoMethod\":{\"type\":\"object\",\"properties\":{\"method\":{\"type\":\"string\"},\"params\":{\"type\":\"object\",\"properties\":{}},\"agent\":{\"type\":\"string\"}},\"required\":[\"agent\",\"method\",\"params\"]}},\"required\":[\"userId\",\"infoMethod\",\"tab\"]}") . unwrap ()
    }
}
impl Agent for AdminConfirmationAddParams {
    fn topic() -> &'static str {
        "admin_confirmation_add"
    }
    fn method() -> &'static str {
        "confirmation_add"
    }
    fn agent() -> &'static str {
        "admin"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Internal
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminConfirmationAddReturns(pub bool);
impl Schema for AdminConfirmationAddReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for AdminConfirmationAddReturns {
    fn topic() -> &'static str {
        "admin_confirmation_add"
    }
    fn method() -> &'static str {
        "confirmation_add"
    }
    fn agent() -> &'static str {
        "admin"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Internal
    }
}
