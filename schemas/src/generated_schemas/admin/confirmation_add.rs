// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminConfirmationAddParamsHistoryParamsParams { # [serde (rename = "userId" , deserialize_with = "deserialize_to_string")] pub user_id : String , # [serde (rename = "isConfirmed")] pub is_confirmed : bool } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminConfirmationAddParamsInfoMethodParamsParamsParams { } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminConfirmationAddParamsInfoMethodParams { # [serde (rename = "agent" , deserialize_with = "deserialize_to_string")] pub agent : String , # [serde (rename = "params")] pub params : AdminConfirmationAddParamsInfoMethodParamsParamsParams , # [serde (rename = "method" , deserialize_with = "deserialize_to_string")] pub method : String } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminConfirmationAddParams { # [serde (rename = "userId" , deserialize_with = "deserialize_to_string")] pub user_id : String , # [serde (rename = "history")] pub history : Option < Vec < AdminConfirmationAddParamsHistoryParamsParams > > , # [serde (rename = "isSuccess")] pub is_success : Option < bool > , # [serde (rename = "infoMethod")] pub info_method : AdminConfirmationAddParamsInfoMethodParams , # [serde (rename = "tab" , deserialize_with = "deserialize_to_string")] pub tab : String } impl Schema for AdminConfirmationAddParams { fn schema () -> Value { serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"},\"history\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"},\"isConfirmed\":{\"type\":\"boolean\"}},\"required\":[\"userId\",\"isConfirmed\"]}},\"isSuccess\":{\"type\":\"boolean\"},\"infoMethod\":{\"type\":\"object\",\"properties\":{\"agent\":{\"type\":\"string\"},\"params\":{\"type\":\"object\",\"properties\":{}},\"method\":{\"type\":\"string\"}},\"required\":[\"agent\",\"method\",\"params\"]},\"tab\":{\"type\":\"string\"}},\"required\":[\"userId\",\"infoMethod\",\"tab\"]}") . unwrap () } } impl Agent for AdminConfirmationAddParams { fn topic () -> & 'static str { "admin_confirmation_add" } fn method () -> & 'static str { "confirmation_add" } fn agent () -> & 'static str { "admin" } fn access_level () -> AccessLevel { AccessLevel :: Internal } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminConfirmationAddReturns (pub bool) ; impl Schema for AdminConfirmationAddReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"boolean\"}") } } impl Agent for AdminConfirmationAddReturns { fn topic () -> & 'static str { "admin_confirmation_add" } fn method () -> & 'static str { "confirmation_add" } fn agent () -> & 'static str { "admin" } fn access_level () -> AccessLevel { AccessLevel :: Internal } }