// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminConfirmationAddSolutionAdminForManyParams {
    #[serde(rename = "isConfirmed")]
    pub is_confirmed: bool,
    #[serde(rename = "ids")]
    pub ids: Vec<f64>,
}
impl Schema for AdminConfirmationAddSolutionAdminForManyParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"isConfirmed\":{\"type\":\"boolean\"},\"ids\":{\"type\":\"array\",\"items\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}}},\"required\":[\"ids\",\"isConfirmed\"]}") . unwrap ()
    }
}
impl Agent for AdminConfirmationAddSolutionAdminForManyParams {
    fn topic() -> &'static str {
        "admin_confirmation_addSolutionAdminForMany"
    }
    fn method() -> &'static str {
        "confirmation_addSolutionAdminForMany"
    }
    fn agent() -> &'static str {
        "admin"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Private
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminConfirmationAddSolutionAdminForManyReturns(pub bool);
impl Schema for AdminConfirmationAddSolutionAdminForManyReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for AdminConfirmationAddSolutionAdminForManyReturns {
    fn topic() -> &'static str {
        "admin_confirmation_addSolutionAdminForMany"
    }
    fn method() -> &'static str {
        "confirmation_addSolutionAdminForMany"
    }
    fn agent() -> &'static str {
        "admin"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Private
    }
}
