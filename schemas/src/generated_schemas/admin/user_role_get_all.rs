// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
impl<'de> Deserialize<'de> for AdminUserRoleGetAllParams {
    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        Ok(AdminUserRoleGetAllParams)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct AdminUserRoleGetAllParams;
impl Schema for AdminUserRoleGetAllParams {
    fn schema() -> Value {
        serde_json::json!("{}")
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminUserRoleGetAllReturnsParamsRoleParams {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "id")]
    pub id: i64,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminUserRoleGetAllReturnsParams {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "role")]
    pub role: AdminUserRoleGetAllReturnsParamsRoleParams,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "isActive")]
    pub is_active: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AdminUserRoleGetAllReturns(Vec<AdminUserRoleGetAllReturnsParams>);
impl Schema for AdminUserRoleGetAllReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"role\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"id\",\"name\"]},\"userId\":{\"type\":\"string\"},\"isActive\":{\"type\":\"boolean\"}},\"required\":[\"id\",\"userId\",\"isActive\",\"role\"]}}")
    }
}
