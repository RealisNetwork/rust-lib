// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminActionGetAllByFilterListParams { # [serde (rename = "nickname")] pub nickname : String , # [serde (rename = "isCancelable")] pub is_cancelable : bool , # [serde (rename = "agent")] pub agent : String , # [serde (rename = "firstDate")] pub first_date : String , # [serde (rename = "lastDate")] pub last_date : String , # [serde (rename = "perPage")] pub per_page : i64 , # [serde (rename = "page")] pub page : i64 , # [serde (rename = "type")] pub r#type : String , # [serde (rename = "method")] pub method : String , # [serde (rename = "userId")] pub user_id : String } impl Schema for AdminActionGetAllByFilterListParams { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"nickname\":{\"type\":\"string\"},\"isCancelable\":{\"type\":\"boolean\"},\"agent\":{\"type\":\"string\"},\"firstDate\":{\"type\":\"string\"},\"lastDate\":{\"type\":\"string\"},\"perPage\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"page\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"type\":{\"type\":\"string\"},\"method\":{\"type\":\"string\"},\"userId\":{\"type\":\"string\"}},\"required\":null}") } } impl Agent for AdminActionGetAllByFilterListParams { fn topic () -> & 'static str { "admin_action_getAllByFilterList" } fn method () -> & 'static str { "action_getAllByFilterList" } fn agent () -> & 'static str { "admin" } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminActionGetAllByFilterListReturnsDataParamsParamsParamsParams { } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminActionGetAllByFilterListReturnsDataParamsParams { # [serde (rename = "isCancelable")] pub is_cancelable : bool , # [serde (rename = "id")] pub id : i64 , # [serde (rename = "actionId")] pub action_id : String , # [serde (rename = "nickname")] pub nickname : String , # [serde (rename = "params")] pub params : AdminActionGetAllByFilterListReturnsDataParamsParamsParamsParams , # [serde (rename = "agent")] pub agent : String , # [serde (rename = "type")] pub r#type : String , # [serde (rename = "method")] pub method : String , # [serde (rename = "createdAt")] pub created_at : String , # [serde (rename = "userId")] pub user_id : String } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct AdminActionGetAllByFilterListReturns { # [serde (rename = "totalCount")] pub total_count : i64 , # [serde (rename = "data")] pub data : Vec < AdminActionGetAllByFilterListReturnsDataParamsParams > } impl Schema for AdminActionGetAllByFilterListReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"totalCount\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"isCancelable\":{\"type\":\"boolean\"},\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"actionId\":{\"type\":\"string\"},\"nickname\":{\"type\":\"string\"},\"params\":{\"type\":\"object\",\"properties\":{},\"required\":null},\"agent\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"method\":{\"type\":\"string\"},\"createdAt\":{\"type\":\"string\"},\"userId\":{\"type\":\"string\"}},\"required\":[\"id\",\"actionId\",\"nickname\",\"userId\",\"method\",\"isCancelable\",\"params\",\"agent\",\"type\",\"createdAt\"]}}},\"required\":[\"data\",\"totalCount\"]}") } } impl Agent for AdminActionGetAllByFilterListReturns { fn topic () -> & 'static str { "admin_action_getAllByFilterList" } fn method () -> & 'static str { "action_getAllByFilterList" } fn agent () -> & 'static str { "admin" } }