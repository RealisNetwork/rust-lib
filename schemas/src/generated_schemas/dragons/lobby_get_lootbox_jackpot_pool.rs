// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for DragonsLobbyGetLootboxJackpotPoolParams { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (DragonsLobbyGetLootboxJackpotPoolParams) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyGetLootboxJackpotPoolParams ; impl Schema for DragonsLobbyGetLootboxJackpotPoolParams { fn schema () -> Value { serde_json :: from_str ("{}") . unwrap () } } impl Agent for DragonsLobbyGetLootboxJackpotPoolParams { fn topic () -> & 'static str { "dragons_lobby_getLootboxJackpotPool" } fn method () -> & 'static str { "lobby_getLootboxJackpotPool" } fn agent () -> & 'static str { "dragons" } fn access_level () -> AccessLevel { } } impl < 'de > Deserialize < 'de > for DragonsLobbyGetLootboxJackpotPoolReturns { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (DragonsLobbyGetLootboxJackpotPoolReturns) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyGetLootboxJackpotPoolReturns ; impl Schema for DragonsLobbyGetLootboxJackpotPoolReturns { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for DragonsLobbyGetLootboxJackpotPoolReturns { fn topic () -> & 'static str { "dragons_lobby_getLootboxJackpotPool" } fn method () -> & 'static str { "lobby_getLootboxJackpotPool" } fn agent () -> & 'static str { "dragons" } fn access_level () -> AccessLevel { } }