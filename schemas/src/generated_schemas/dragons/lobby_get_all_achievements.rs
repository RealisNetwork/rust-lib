// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for DragonsLobbyGetAllAchievementsParams { fn deserialize < D > (_deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { Ok (DragonsLobbyGetAllAchievementsParams) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyGetAllAchievementsParams ; impl Schema for DragonsLobbyGetAllAchievementsParams { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for DragonsLobbyGetAllAchievementsParams { fn topic () -> & 'static str { "dragons_lobby_getAllAchievements" } fn method () -> & 'static str { "lobby_getAllAchievements" } fn agent () -> & 'static str { "dragons" } } impl < 'de > Deserialize < 'de > for DragonsLobbyGetAllAchievementsReturns { fn deserialize < D > (_deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { Ok (DragonsLobbyGetAllAchievementsReturns) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyGetAllAchievementsReturns ; impl Schema for DragonsLobbyGetAllAchievementsReturns { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for DragonsLobbyGetAllAchievementsReturns { fn topic () -> & 'static str { "dragons_lobby_getAllAchievements" } fn method () -> & 'static str { "lobby_getAllAchievements" } fn agent () -> & 'static str { "dragons" } }