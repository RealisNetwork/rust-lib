// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct DragonsLobbyOpenLootboxParams { # [serde (rename = "lootboxId")] pub lootbox_id : f64 , # [serde (rename = "userId" , deserialize_with = "deserialize_to_string")] pub user_id : String } impl Schema for DragonsLobbyOpenLootboxParams { fn schema () -> Value { serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"lootboxId\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"userId\":{\"type\":\"string\"}},\"required\":[\"userId\",\"lootboxId\"]}") . unwrap () } } impl Agent for DragonsLobbyOpenLootboxParams { fn topic () -> & 'static str { "dragons_lobby_openLootbox" } fn method () -> & 'static str { "lobby_openLootbox" } fn agent () -> & 'static str { "dragons" } fn access_level () -> AccessLevel { AccessLevel :: Protected } } impl < 'de > Deserialize < 'de > for DragonsLobbyOpenLootboxReturns { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (DragonsLobbyOpenLootboxReturns) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyOpenLootboxReturns ; impl Schema for DragonsLobbyOpenLootboxReturns { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for DragonsLobbyOpenLootboxReturns { fn topic () -> & 'static str { "dragons_lobby_openLootbox" } fn method () -> & 'static str { "lobby_openLootbox" } fn agent () -> & 'static str { "dragons" } fn access_level () -> AccessLevel { AccessLevel :: Protected } }