// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for DragonsLobbyKeepAliveParams { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (DragonsLobbyKeepAliveParams) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyKeepAliveParams ; impl Schema for DragonsLobbyKeepAliveParams { fn schema () -> Value { serde_json :: from_str ("{}") . unwrap () } } impl Agent for DragonsLobbyKeepAliveParams { fn topic () -> & 'static str { "dragons_lobby_keepAlive" } fn method () -> & 'static str { "lobby_keepAlive" } fn agent () -> & 'static str { "dragons" } fn access_level () -> AccessLevel { } } impl < 'de > Deserialize < 'de > for DragonsLobbyKeepAliveReturns { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (DragonsLobbyKeepAliveReturns) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyKeepAliveReturns ; impl Schema for DragonsLobbyKeepAliveReturns { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for DragonsLobbyKeepAliveReturns { fn topic () -> & 'static str { "dragons_lobby_keepAlive" } fn method () -> & 'static str { "lobby_keepAlive" } fn agent () -> & 'static str { "dragons" } fn access_level () -> AccessLevel { } }