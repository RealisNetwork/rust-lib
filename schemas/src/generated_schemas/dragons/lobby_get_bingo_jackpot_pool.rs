// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for DragonsLobbyGetBingoJackpotPoolParams { fn deserialize < D > (_deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { Ok (DragonsLobbyGetBingoJackpotPoolParams) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyGetBingoJackpotPoolParams ; impl Schema for DragonsLobbyGetBingoJackpotPoolParams { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for DragonsLobbyGetBingoJackpotPoolParams { fn topic () -> & 'static str { "dragons_lobby_getBingoJackpotPool" } fn method () -> & 'static str { "lobby_getBingoJackpotPool" } fn agent () -> & 'static str { "dragons" } } impl < 'de > Deserialize < 'de > for DragonsLobbyGetBingoJackpotPoolReturns { fn deserialize < D > (_deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { Ok (DragonsLobbyGetBingoJackpotPoolReturns) } } # [derive (Debug , Clone , Serialize)] pub struct DragonsLobbyGetBingoJackpotPoolReturns ; impl Schema for DragonsLobbyGetBingoJackpotPoolReturns { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for DragonsLobbyGetBingoJackpotPoolReturns { fn topic () -> & 'static str { "dragons_lobby_getBingoJackpotPool" } fn method () -> & 'static str { "lobby_getBingoJackpotPool" } fn agent () -> & 'static str { "dragons" } }