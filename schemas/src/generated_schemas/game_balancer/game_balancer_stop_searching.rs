// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for GameBalancerGameBalancerStopSearchingParams { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (GameBalancerGameBalancerStopSearchingParams) } } # [derive (Debug , Clone , Serialize)] pub struct GameBalancerGameBalancerStopSearchingParams ; impl Schema for GameBalancerGameBalancerStopSearchingParams { fn schema () -> Value { serde_json :: from_str ("{}") . unwrap () } } impl Agent for GameBalancerGameBalancerStopSearchingParams { fn topic () -> & 'static str { "gameBalancer_gameBalancer_stopSearching" } fn method () -> & 'static str { "gameBalancer_stopSearching" } fn agent () -> & 'static str { "gameBalancer" } fn access_level () -> AccessLevel { AccessLevel :: Protected } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct GameBalancerGameBalancerStopSearchingReturns (pub bool) ; impl Schema for GameBalancerGameBalancerStopSearchingReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"boolean\"}") } } impl Agent for GameBalancerGameBalancerStopSearchingReturns { fn topic () -> & 'static str { "gameBalancer_gameBalancer_stopSearching" } fn method () -> & 'static str { "gameBalancer_stopSearching" } fn agent () -> & 'static str { "gameBalancer" } fn access_level () -> AccessLevel { AccessLevel :: Protected } }