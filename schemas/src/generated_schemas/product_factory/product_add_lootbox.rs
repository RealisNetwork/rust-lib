// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct ProductFactoryProductAddLootboxParams { # [serde (rename = "personalType")] pub personal_type : String , # [serde (rename = "userId")] pub user_id : String } impl Schema for ProductFactoryProductAddLootboxParams { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"personalType\":{\"type\":\"string\"},\"userId\":{\"type\":\"string\"}},\"required\":[\"userId\",\"personalType\"]}") } } impl Agent for ProductFactoryProductAddLootboxParams { fn topic () -> & 'static str { "productFactory_product_addLootbox" } fn method () -> & 'static str { "product_addLootbox" } fn agent () -> & 'static str { "productFactory" } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct ProductFactoryProductAddLootboxReturns (pub bool) ; impl Schema for ProductFactoryProductAddLootboxReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"boolean\"}") } } impl Agent for ProductFactoryProductAddLootboxReturns { fn topic () -> & 'static str { "productFactory_product_addLootbox" } fn method () -> & 'static str { "product_addLootbox" } fn agent () -> & 'static str { "productFactory" } }