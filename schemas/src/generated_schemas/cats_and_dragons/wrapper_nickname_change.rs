// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct CatsAndDragonsWrapperNicknameChangeParams { # [serde (rename = "userId" , deserialize_with = "deserialize_to_string")] pub user_id : String , # [serde (rename = "newNickname" , deserialize_with = "deserialize_to_string")] pub new_nickname : String } impl Schema for CatsAndDragonsWrapperNicknameChangeParams { fn schema () -> Value { serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"},\"newNickname\":{\"type\":\"string\"}},\"required\":[\"userId\",\"newNickname\"]}") . unwrap () } } impl Agent for CatsAndDragonsWrapperNicknameChangeParams { fn topic () -> & 'static str { "catsAndDragons_wrapper_nicknameChange" } fn method () -> & 'static str { "wrapper_nicknameChange" } fn agent () -> & 'static str { "catsAndDragons" } fn access_level () -> AccessLevel { AccessLevel :: Public } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct CatsAndDragonsWrapperNicknameChangeReturns { # [serde (rename = "isNicknameChanged")] pub is_nickname_changed : bool } impl Schema for CatsAndDragonsWrapperNicknameChangeReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"isNicknameChanged\":{\"type\":\"boolean\"}},\"required\":[\"isNicknameChanged\"]}") } } impl Agent for CatsAndDragonsWrapperNicknameChangeReturns { fn topic () -> & 'static str { "catsAndDragons_wrapper_nicknameChange" } fn method () -> & 'static str { "wrapper_nicknameChange" } fn agent () -> & 'static str { "catsAndDragons" } fn access_level () -> AccessLevel { AccessLevel :: Public } }