// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BlogPollGetParams {
    #[serde(rename = "id")]
    pub id: f64,
}
impl Schema for BlogPollGetParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"id\"]}") . unwrap ()
    }
}
impl Agent for BlogPollGetParams {
    fn topic() -> &'static str {
        "blog_poll_get"
    }
    fn method() -> &'static str {
        "poll_get"
    }
    fn agent() -> &'static str {
        "blog"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BlogPollGetReturnsVotesParams {
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "answer")]
    pub answer: f64,
    #[serde(rename = "id")]
    pub id: f64,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BlogPollGetReturnsAnswersParamsParams {
    #[serde(rename = "answer")]
    pub answer: String,
    #[serde(rename = "isImage")]
    pub is_image: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BlogPollGetReturns {
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "id")]
    pub id: f64,
    #[serde(rename = "endDate")]
    pub end_date: String,
    #[serde(rename = "question")]
    pub question: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "votes")]
    pub votes: BlogPollGetReturnsVotesParams,
    #[serde(rename = "answers")]
    pub answers: Vec<BlogPollGetReturnsAnswersParamsParams>,
}
impl Schema for BlogPollGetReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"updatedAt\":{\"type\":\"string\"},\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"endDate\":{\"type\":\"string\"},\"question\":{\"type\":\"string\"},\"createdAt\":{\"type\":\"string\"},\"votes\":{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"},\"answer\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"id\",\"userId\",\"answer\"]},\"answers\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"answer\":{\"type\":\"string\"},\"isImage\":{\"type\":\"boolean\"}},\"required\":[\"isImage\",\"answer\"]}}},\"required\":[\"id\",\"question\",\"answers\",\"endDate\",\"createdAt\",\"updatedAt\",\"votes\"]}")
    }
}
impl Agent for BlogPollGetReturns {
    fn topic() -> &'static str {
        "blog_poll_get"
    }
    fn method() -> &'static str {
        "poll_get"
    }
    fn agent() -> &'static str {
        "blog"
    }
}
