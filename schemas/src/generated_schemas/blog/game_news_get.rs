// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BlogGameNewsGetParams {
    #[serde(rename = "id")]
    pub id: f64,
}
impl Schema for BlogGameNewsGetParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"id\"]}") . unwrap ()
    }
}
impl Agent for BlogGameNewsGetParams {
    fn topic() -> &'static str {
        "blog_gameNews_get"
    }
    fn method() -> &'static str {
        "gameNews_get"
    }
    fn agent() -> &'static str {
        "blog"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Public
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BlogGameNewsGetReturns {
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "image")]
    pub image: String,
    #[serde(rename = "appId")]
    pub app_id: f64,
    #[serde(rename = "id")]
    pub id: f64,
    #[serde(rename = "content")]
    pub content: String,
    #[serde(rename = "title")]
    pub title: String,
}
impl Schema for BlogGameNewsGetReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"},\"image\":{\"type\":\"string\"},\"appId\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"content\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"}},\"required\":[\"id\",\"title\",\"content\",\"image\",\"appId\",\"createdAt\",\"updatedAt\"]}")
    }
}
impl Agent for BlogGameNewsGetReturns {
    fn topic() -> &'static str {
        "blog_gameNews_get"
    }
    fn method() -> &'static str {
        "gameNews_get"
    }
    fn agent() -> &'static str {
        "blog"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Public
    }
}
