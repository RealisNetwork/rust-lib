// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BattlePassBattlePassEndpointsGetCurrentBattlePassExperienceParams {}
impl Schema for BattlePassBattlePassEndpointsGetCurrentBattlePassExperienceParams {
    fn schema() -> Value {
        serde_json::from_str("{\"type\":\"object\",\"properties\":{}}").unwrap()
    }
}
impl Agent for BattlePassBattlePassEndpointsGetCurrentBattlePassExperienceParams {
    fn topic() -> &'static str {
        "battle-pass_battlePassEndpoints_getCurrentBattlePassExperience"
    }
    fn method() -> &'static str {
        "battlePassEndpoints_getCurrentBattlePassExperience"
    }
    fn agent() -> &'static str {
        "battle-pass"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BattlePassBattlePassEndpointsGetCurrentBattlePassExperienceReturns {
    #[serde(rename = "amount")]
    pub amount: i32,
}
impl Schema for BattlePassBattlePassEndpointsGetCurrentBattlePassExperienceReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"integer\",\"minimum\":-2147483648,\"maximum\":2147483647,\"additionalAttributes\":{\"numberType\":\"Int\"}}},\"required\":[\"amount\"]}")
    }
}
impl Agent for BattlePassBattlePassEndpointsGetCurrentBattlePassExperienceReturns {
    fn topic() -> &'static str {
        "battle-pass_battlePassEndpoints_getCurrentBattlePassExperience"
    }
    fn method() -> &'static str {
        "battlePassEndpoints_getCurrentBattlePassExperience"
    }
    fn agent() -> &'static str {
        "battle-pass"
    }
}
