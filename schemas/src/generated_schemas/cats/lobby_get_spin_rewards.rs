// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CatsLobbyGetSpinRewardsParams {
    #[serde(rename = "userId")]
    pub user_id: String,
}
impl Schema for CatsLobbyGetSpinRewardsParams {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"}},\"required\":[\"userId\"]}")
    }
}
impl Agent for CatsLobbyGetSpinRewardsParams {
    fn topic() -> &'static str {
        "cats_lobby_getSpinRewards"
    }
    fn method() -> &'static str {
        "lobby_getSpinRewards"
    }
    fn agent() -> &'static str {
        "cats"
    }
}
impl<'de> Deserialize<'de> for CatsLobbyGetSpinRewardsReturns {
    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        Ok(CatsLobbyGetSpinRewardsReturns)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct CatsLobbyGetSpinRewardsReturns;
impl Schema for CatsLobbyGetSpinRewardsReturns {
    fn schema() -> Value {
        serde_json::json!("{}")
    }
}
impl Agent for CatsLobbyGetSpinRewardsReturns {
    fn topic() -> &'static str {
        "cats_lobby_getSpinRewards"
    }
    fn method() -> &'static str {
        "lobby_getSpinRewards"
    }
    fn agent() -> &'static str {
        "cats"
    }
}
