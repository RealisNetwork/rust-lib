// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CatsLobbyGetUsersCompletedTasksParams {
    #[serde(rename = "userId")]
    pub user_id: String,
}
impl Schema for CatsLobbyGetUsersCompletedTasksParams {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"}},\"required\":[\"userId\"]}")
    }
}
impl Agent for CatsLobbyGetUsersCompletedTasksParams {
    fn topic() -> &'static str {
        "cats_lobby_getUsersCompletedTasks"
    }
    fn method() -> &'static str {
        "lobby_getUsersCompletedTasks"
    }
    fn agent() -> &'static str {
        "cats"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CatsLobbyGetUsersCompletedTasksReturns {
    #[serde(rename = "Tasks")]
    pub tasks: Vec<f64>,
}
impl Schema for CatsLobbyGetUsersCompletedTasksReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"Tasks\":{\"type\":\"array\",\"items\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}}},\"required\":[\"Tasks\"]}")
    }
}
impl Agent for CatsLobbyGetUsersCompletedTasksReturns {
    fn topic() -> &'static str {
        "cats_lobby_getUsersCompletedTasks"
    }
    fn method() -> &'static str {
        "lobby_getUsersCompletedTasks"
    }
    fn agent() -> &'static str {
        "cats"
    }
}
