// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ReferralLinkGetAllParams {
    #[serde(rename = "userId", deserialize_with = "deserialize_to_string")]
    pub user_id: String,
}
impl Schema for ReferralLinkGetAllParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"}},\"required\":[\"userId\"]}") . unwrap ()
    }
}
impl Agent for ReferralLinkGetAllParams {
    fn topic() -> &'static str {
        "referral_link_getAll"
    }
    fn method() -> &'static str {
        "link_getAll"
    }
    fn agent() -> &'static str {
        "referral"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Private
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ReferralLinkGetAllReturnsReferralLinksParamsParams {
    #[serde(rename = "link", deserialize_with = "deserialize_to_string")]
    pub link: String,
    #[serde(rename = "appId")]
    pub app_id: f64,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ReferralLinkGetAllReturns {
    #[serde(rename = "referralCode", deserialize_with = "deserialize_to_string")]
    pub referral_code: String,
    #[serde(rename = "referralLinks")]
    pub referral_links: Vec<ReferralLinkGetAllReturnsReferralLinksParamsParams>,
}
impl Schema for ReferralLinkGetAllReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"referralCode\":{\"type\":\"string\"},\"referralLinks\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"link\":{\"type\":\"string\"},\"appId\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"appId\",\"link\"]}}},\"required\":[\"referralCode\",\"referralLinks\"]}")
    }
}
impl Agent for ReferralLinkGetAllReturns {
    fn topic() -> &'static str {
        "referral_link_getAll"
    }
    fn method() -> &'static str {
        "link_getAll"
    }
    fn agent() -> &'static str {
        "referral"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Private
    }
}
