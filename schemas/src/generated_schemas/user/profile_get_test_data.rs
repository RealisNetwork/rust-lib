// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for UserProfileGetTestDataParams { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (UserProfileGetTestDataParams) } } # [derive (Debug , Clone , Serialize)] pub struct UserProfileGetTestDataParams ; impl Schema for UserProfileGetTestDataParams { fn schema () -> Value { serde_json :: from_str ("{}") . unwrap () } } impl Agent for UserProfileGetTestDataParams { fn topic () -> & 'static str { "user_profile_getTestData" } fn method () -> & 'static str { "profile_getTestData" } fn agent () -> & 'static str { "user" } fn access_level () -> AccessLevel { } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct UserProfileGetTestDataReturns { # [serde (rename = "hello")] pub hello : String } impl Schema for UserProfileGetTestDataReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"hello\":{\"type\":\"string\"}},\"required\":[\"hello\"]}") } } impl Agent for UserProfileGetTestDataReturns { fn topic () -> & 'static str { "user_profile_getTestData" } fn method () -> & 'static str { "profile_getTestData" } fn agent () -> & 'static str { "user" } fn access_level () -> AccessLevel { } }