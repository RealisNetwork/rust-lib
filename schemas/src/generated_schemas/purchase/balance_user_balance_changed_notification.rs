// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
impl<'de> Deserialize<'de> for PurchaseBalanceUserBalanceChangedNotificationParams {
    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        Ok(PurchaseBalanceUserBalanceChangedNotificationParams)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct PurchaseBalanceUserBalanceChangedNotificationParams;
impl Schema for PurchaseBalanceUserBalanceChangedNotificationParams {
    fn schema() -> Value {
        serde_json::json!("{}")
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseBalanceUserBalanceChangedNotificationReturns {
    #[serde(rename = "transactionHash")]
    pub transaction_hash: String,
    #[serde(rename = "balance")]
    pub balance: String,
    #[serde(rename = "blockId")]
    pub block_id: String,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "currency")]
    pub currency: String,
}
impl Schema for PurchaseBalanceUserBalanceChangedNotificationReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"transactionHash\":{\"type\":\"string\"},\"balance\":{\"type\":\"string\"},\"blockId\":{\"type\":\"string\"},\"amount\":{\"type\":\"string\"},\"currency\":{\"type\":\"string\",\"pattern\":\"^(ETH)|(LIS)$\"}},\"required\":[\"currency\",\"amount\",\"transactionHash\",\"balance\",\"blockId\"]}")
    }
}
