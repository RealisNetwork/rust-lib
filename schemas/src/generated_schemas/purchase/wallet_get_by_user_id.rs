// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
impl<'de> Deserialize<'de> for PurchaseWalletGetByUserIdParams {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        serde_json::Value::deserialize(deserializer)?;
        Ok(PurchaseWalletGetByUserIdParams)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct PurchaseWalletGetByUserIdParams;
impl Schema for PurchaseWalletGetByUserIdParams {
    fn schema() -> Value {
        serde_json::from_str("{}").unwrap()
    }
}
impl Agent for PurchaseWalletGetByUserIdParams {
    fn topic() -> &'static str {
        "purchase_wallet_getByUserId"
    }
    fn method() -> &'static str {
        "wallet_getByUserId"
    }
    fn agent() -> &'static str {
        "purchase"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseWalletGetByUserIdReturns {
    #[serde(rename = "address")]
    pub address: String,
}
impl Schema for PurchaseWalletGetByUserIdReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"address\":{\"type\":\"string\"}},\"required\":[\"address\"]}")
    }
}
impl Agent for PurchaseWalletGetByUserIdReturns {
    fn topic() -> &'static str {
        "purchase_wallet_getByUserId"
    }
    fn method() -> &'static str {
        "wallet_getByUserId"
    }
    fn agent() -> &'static str {
        "purchase"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
