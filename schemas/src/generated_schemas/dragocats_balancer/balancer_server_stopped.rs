// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct DragocatsBalancerBalancerServerStoppedParams {
    #[serde(rename = "clientId")]
    pub client_id: String,
}
impl Schema for DragocatsBalancerBalancerServerStoppedParams {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"clientId\":{\"type\":\"string\"}},\"required\":[\"clientId\"]}")
    }
}
impl Agent for DragocatsBalancerBalancerServerStoppedParams {
    fn topic() -> &'static str {
        "dragocats-balancer_balancer_serverStopped"
    }
    fn method() -> &'static str {
        "balancer_serverStopped"
    }
    fn agent() -> &'static str {
        "dragocats-balancer"
    }
}
impl<'de> Deserialize<'de> for DragocatsBalancerBalancerServerStoppedReturns {
    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        Ok(DragocatsBalancerBalancerServerStoppedReturns)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct DragocatsBalancerBalancerServerStoppedReturns;
impl Schema for DragocatsBalancerBalancerServerStoppedReturns {
    fn schema() -> Value {
        serde_json::json!("{}")
    }
}
impl Agent for DragocatsBalancerBalancerServerStoppedReturns {
    fn topic() -> &'static str {
        "dragocats-balancer_balancer_serverStopped"
    }
    fn method() -> &'static str {
        "balancer_serverStopped"
    }
    fn agent() -> &'static str {
        "dragocats-balancer"
    }
}
