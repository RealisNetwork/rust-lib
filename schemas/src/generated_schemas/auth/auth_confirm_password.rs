// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthConfirmPasswordParams {
    #[serde(rename = "password")]
    pub password: String,
}
impl Schema for AuthAuthConfirmPasswordParams {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"password\":{\"type\":\"string\"}},\"required\":[\"password\"]}")
    }
}
impl Agent for AuthAuthConfirmPasswordParams {
    fn topic() -> &'static str {
        "auth_auth_confirmPassword"
    }
    fn method() -> &'static str {
        "auth_confirmPassword"
    }
    fn agent() -> &'static str {
        "auth"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthConfirmPasswordReturns(bool);
impl Schema for AuthAuthConfirmPasswordReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for AuthAuthConfirmPasswordReturns {
    fn topic() -> &'static str {
        "auth_auth_confirmPassword"
    }
    fn method() -> &'static str {
        "auth_confirmPassword"
    }
    fn agent() -> &'static str {
        "auth"
    }
}
