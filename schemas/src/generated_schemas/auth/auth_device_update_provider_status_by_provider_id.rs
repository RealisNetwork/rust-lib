// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthDeviceUpdateProviderStatusByProviderIdParams {
    #[serde(rename = "status")]
    pub status: (),
    #[serde(rename = "providerId")]
    pub provider_id: String,
}
impl Schema for AuthAuthDeviceUpdateProviderStatusByProviderIdParams {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"status\":{},\"providerId\":{\"type\":\"string\"}},\"required\":[\"providerId\",\"status\"]}")
    }
}
impl Agent for AuthAuthDeviceUpdateProviderStatusByProviderIdParams {
    fn topic() -> &'static str {
        "auth_authDevice_updateProviderStatusByProviderId"
    }
    fn method() -> &'static str {
        "authDevice_updateProviderStatusByProviderId"
    }
    fn agent() -> &'static str {
        "auth"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthDeviceUpdateProviderStatusByProviderIdReturns(bool);
impl Schema for AuthAuthDeviceUpdateProviderStatusByProviderIdReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for AuthAuthDeviceUpdateProviderStatusByProviderIdReturns {
    fn topic() -> &'static str {
        "auth_authDevice_updateProviderStatusByProviderId"
    }
    fn method() -> &'static str {
        "authDevice_updateProviderStatusByProviderId"
    }
    fn agent() -> &'static str {
        "auth"
    }
}
