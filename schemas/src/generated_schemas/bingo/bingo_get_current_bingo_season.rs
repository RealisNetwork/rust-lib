// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BingoBingoGetCurrentBingoSeasonParams {
    #[serde(rename = "appId")]
    pub app_id: i32,
}
impl Schema for BingoBingoGetCurrentBingoSeasonParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"appId\":{\"type\":\"integer\",\"minimum\":-2147483648,\"maximum\":2147483647,\"additionalAttributes\":{\"numberType\":\"Int\"}}},\"required\":[\"appId\"]}") . unwrap ()
    }
}
impl Agent for BingoBingoGetCurrentBingoSeasonParams {
    fn topic() -> &'static str {
        "bingo_bingo_getCurrentBingoSeason"
    }
    fn method() -> &'static str {
        "bingo_getCurrentBingoSeason"
    }
    fn agent() -> &'static str {
        "bingo"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BingoBingoGetCurrentBingoSeasonReturns(pub bool);
impl Schema for BingoBingoGetCurrentBingoSeasonReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for BingoBingoGetCurrentBingoSeasonReturns {
    fn topic() -> &'static str {
        "bingo_bingo_getCurrentBingoSeason"
    }
    fn method() -> &'static str {
        "bingo_getCurrentBingoSeason"
    }
    fn agent() -> &'static str {
        "bingo"
    }
}
