// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct OrchestratorBattlePassPurchasePremiumParams { # [serde (rename = "userId")] pub user_id : String , # [serde (rename = "txId")] pub tx_id : String , # [serde (rename = "creator")] pub creator : String } impl Schema for OrchestratorBattlePassPurchasePremiumParams { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"},\"txId\":{\"type\":\"string\"},\"creator\":{\"type\":\"string\"}},\"required\":[\"userId\",\"txId\",\"creator\"]}") } } impl Agent for OrchestratorBattlePassPurchasePremiumParams { fn topic () -> & 'static str { "orchestrator_battlePass_purchasePremium" } fn method () -> & 'static str { "battlePass_purchasePremium" } fn agent () -> & 'static str { "orchestrator" } } impl < 'de > Deserialize < 'de > for OrchestratorBattlePassPurchasePremiumReturns { fn deserialize < D > (_deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { Ok (OrchestratorBattlePassPurchasePremiumReturns) } } # [derive (Debug , Clone , Serialize)] pub struct OrchestratorBattlePassPurchasePremiumReturns ; impl Schema for OrchestratorBattlePassPurchasePremiumReturns { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for OrchestratorBattlePassPurchasePremiumReturns { fn topic () -> & 'static str { "orchestrator_battlePass_purchasePremium" } fn method () -> & 'static str { "battlePass_purchasePremium" } fn agent () -> & 'static str { "orchestrator" } }