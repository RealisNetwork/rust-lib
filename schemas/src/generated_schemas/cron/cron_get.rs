// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CronCronGetParams {
    #[serde(rename = "id")]
    pub id: f64,
}
impl Schema for CronCronGetParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"id\"]}") . unwrap ()
    }
}
impl Agent for CronCronGetParams {
    fn topic() -> &'static str {
        "cron_cron_get"
    }
    fn method() -> &'static str {
        "cron_get"
    }
    fn agent() -> &'static str {
        "cron"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Internal
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct CronCronGetReturns {
    #[serde(rename = "startsAt", deserialize_with = "deserialize_to_string")]
    pub starts_at: String,
    #[serde(rename = "updatedAt", deserialize_with = "deserialize_to_string")]
    pub updated_at: String,
    #[serde(rename = "id")]
    pub id: f64,
    #[serde(rename = "createdAt", deserialize_with = "deserialize_to_string")]
    pub created_at: String,
    #[serde(rename = "key", deserialize_with = "deserialize_to_string")]
    pub key: String,
    #[serde(rename = "howOften")]
    pub how_often: f64,
}
impl Schema for CronCronGetReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"startsAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"},\"id\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}},\"createdAt\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"howOften\":{\"type\":\"integer\",\"minimum\":-9223372036854775808,\"maximum\":9223372036854775807,\"additionalAttributes\":{\"numberType\":\"Number\"}}},\"required\":[\"id\",\"key\",\"howOften\",\"startsAt\",\"createdAt\",\"updatedAt\"]}")
    }
}
impl Agent for CronCronGetReturns {
    fn topic() -> &'static str {
        "cron_cron_get"
    }
    fn method() -> &'static str {
        "cron_get"
    }
    fn agent() -> &'static str {
        "cron"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Internal
    }
}
