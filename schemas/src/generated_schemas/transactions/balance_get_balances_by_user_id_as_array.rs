// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for TransactionsBalanceGetBalancesByUserIdAsArrayParams { fn deserialize < D > (_deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { Ok (TransactionsBalanceGetBalancesByUserIdAsArrayParams) } } # [derive (Debug , Clone , Serialize)] pub struct TransactionsBalanceGetBalancesByUserIdAsArrayParams ; impl Schema for TransactionsBalanceGetBalancesByUserIdAsArrayParams { fn schema () -> Value { serde_json :: json ! ("{}") } } impl Agent for TransactionsBalanceGetBalancesByUserIdAsArrayParams { fn topic () -> & 'static str { "transactions_balance_getBalancesByUserIdAsArray" } fn method () -> & 'static str { "balance_getBalancesByUserIdAsArray" } fn agent () -> & 'static str { "transactions" } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct TransactionsBalanceGetBalancesByUserIdAsArrayReturnsParams { # [serde (rename = "amount")] pub amount : String , # [serde (rename = "currency")] pub currency : String } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct TransactionsBalanceGetBalancesByUserIdAsArrayReturns (Vec < TransactionsBalanceGetBalancesByUserIdAsArrayReturnsParams >) ; impl Schema for TransactionsBalanceGetBalancesByUserIdAsArrayReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\"},\"currency\":{\"type\":\"string\",\"pattern\":\"^(ETH)|(LIS)$\"}},\"required\":[\"currency\",\"amount\"]}}") } } impl Agent for TransactionsBalanceGetBalancesByUserIdAsArrayReturns { fn topic () -> & 'static str { "transactions_balance_getBalancesByUserIdAsArray" } fn method () -> & 'static str { "balance_getBalancesByUserIdAsArray" } fn agent () -> & 'static str { "transactions" } }