// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
impl<'de> Deserialize<'de> for TransactionsBalanceGetMyNumOfTransactionsParams {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        serde_json::Value::deserialize(deserializer)?;
        Ok(TransactionsBalanceGetMyNumOfTransactionsParams)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct TransactionsBalanceGetMyNumOfTransactionsParams;
impl Schema for TransactionsBalanceGetMyNumOfTransactionsParams {
    fn schema() -> Value {
        serde_json::from_str("{}").unwrap()
    }
}
impl Agent for TransactionsBalanceGetMyNumOfTransactionsParams {
    fn topic() -> &'static str {
        "transactions_balance_getMyNumOfTransactions"
    }
    fn method() -> &'static str {
        "balance_getMyNumOfTransactions"
    }
    fn agent() -> &'static str {
        "transactions"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetMyNumOfTransactionsReturns(pub i32);
impl Schema for TransactionsBalanceGetMyNumOfTransactionsReturns {
    fn schema() -> Value {
        serde_json :: json ! ("{\"type\":\"integer\",\"minimum\":-2147483648,\"maximum\":2147483647,\"additionalAttributes\":{\"numberType\":\"Int\"}}")
    }
}
impl Agent for TransactionsBalanceGetMyNumOfTransactionsReturns {
    fn topic() -> &'static str {
        "transactions_balance_getMyNumOfTransactions"
    }
    fn method() -> &'static str {
        "balance_getMyNumOfTransactions"
    }
    fn agent() -> &'static str {
        "transactions"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
