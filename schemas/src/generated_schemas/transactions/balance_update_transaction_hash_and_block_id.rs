// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; # [derive (Debug , Clone , Serialize , Deserialize)] pub struct TransactionsBalanceUpdateTransactionHashAndBlockIdParams { # [serde (rename = "newTxId")] pub new_tx_id : String , # [serde (rename = "newBlockId")] pub new_block_id : String , # [serde (rename = "oldTxId")] pub old_tx_id : String } impl Schema for TransactionsBalanceUpdateTransactionHashAndBlockIdParams { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"object\",\"properties\":{\"newTxId\":{\"type\":\"string\"},\"newBlockId\":{\"type\":\"string\"},\"oldTxId\":{\"type\":\"string\"}},\"required\":[\"oldTxId\",\"newTxId\",\"newBlockId\"]}") } } impl Agent for TransactionsBalanceUpdateTransactionHashAndBlockIdParams { fn topic () -> & 'static str { "transactions_balance_updateTransactionHashAndBlockId" } fn method () -> & 'static str { "balance_updateTransactionHashAndBlockId" } fn agent () -> & 'static str { "transactions" } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct TransactionsBalanceUpdateTransactionHashAndBlockIdReturns (bool) ; impl Schema for TransactionsBalanceUpdateTransactionHashAndBlockIdReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"boolean\"}") } } impl Agent for TransactionsBalanceUpdateTransactionHashAndBlockIdReturns { fn topic () -> & 'static str { "transactions_balance_updateTransactionHashAndBlockId" } fn method () -> & 'static str { "balance_updateTransactionHashAndBlockId" } fn agent () -> & 'static str { "transactions" } }