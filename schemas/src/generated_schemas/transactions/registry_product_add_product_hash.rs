// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsRegistryProductAddProductHashParams {
    #[serde(rename = "productId")]
    pub product_id: String,
    #[serde(rename = "hashId")]
    pub hash_id: String,
}
impl Schema for TransactionsRegistryProductAddProductHashParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"productId\":{\"type\":\"string\"},\"hashId\":{\"type\":\"string\"}},\"required\":[\"productId\",\"hashId\"]}") . unwrap ()
    }
}
impl Agent for TransactionsRegistryProductAddProductHashParams {
    fn topic() -> &'static str {
        "transactions_registryProduct_addProductHash"
    }
    fn method() -> &'static str {
        "registryProduct_addProductHash"
    }
    fn agent() -> &'static str {
        "transactions"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Internal
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsRegistryProductAddProductHashReturns(pub bool);
impl Schema for TransactionsRegistryProductAddProductHashReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for TransactionsRegistryProductAddProductHashReturns {
    fn topic() -> &'static str {
        "transactions_registryProduct_addProductHash"
    }
    fn method() -> &'static str {
        "registryProduct_addProductHash"
    }
    fn agent() -> &'static str {
        "transactions"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Internal
    }
}
