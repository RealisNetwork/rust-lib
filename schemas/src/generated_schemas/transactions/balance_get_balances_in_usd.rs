// This file are autogenerated on build, everything you write here will be replaced

# ! [allow (unknown_lints)] # ! [allow (clippy :: all)] use crate :: generated_schemas :: prelude :: * ; impl < 'de > Deserialize < 'de > for TransactionsBalanceGetBalancesInUsdParams { fn deserialize < D > (deserializer : D) -> Result < Self , D :: Error > where D : Deserializer < 'de > , { serde_json :: Value :: deserialize (deserializer) ? ; Ok (TransactionsBalanceGetBalancesInUsdParams) } } # [derive (Debug , Clone , Serialize)] pub struct TransactionsBalanceGetBalancesInUsdParams ; impl Schema for TransactionsBalanceGetBalancesInUsdParams { fn schema () -> Value { serde_json :: from_str ("{}") . unwrap () } } impl Agent for TransactionsBalanceGetBalancesInUsdParams { fn topic () -> & 'static str { "transactions_balance_getBalancesInUsd" } fn method () -> & 'static str { "balance_getBalancesInUsd" } fn agent () -> & 'static str { "transactions" } fn access_level () -> AccessLevel { AccessLevel :: Protected } } # [derive (Debug , Clone , Serialize , Deserialize)] pub struct TransactionsBalanceGetBalancesInUsdReturns (pub String) ; impl Schema for TransactionsBalanceGetBalancesInUsdReturns { fn schema () -> Value { serde_json :: json ! ("{\"type\":\"string\"}") } } impl Agent for TransactionsBalanceGetBalancesInUsdReturns { fn topic () -> & 'static str { "transactions_balance_getBalancesInUsd" } fn method () -> & 'static str { "balance_getBalancesInUsd" } fn agent () -> & 'static str { "transactions" } fn access_level () -> AccessLevel { AccessLevel :: Protected } }