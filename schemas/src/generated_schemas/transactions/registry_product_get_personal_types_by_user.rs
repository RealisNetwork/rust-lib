// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsRegistryProductGetPersonalTypesByUserParams {
    #[serde(rename = "userId")]
    pub user_id: String,
}
impl Schema for TransactionsRegistryProductGetPersonalTypesByUserParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"string\"}},\"required\":[\"userId\"]}") . unwrap ()
    }
}
impl Agent for TransactionsRegistryProductGetPersonalTypesByUserParams {
    fn topic() -> &'static str {
        "transactions_registryProduct_getPersonalTypesByUser"
    }
    fn method() -> &'static str {
        "registryProduct_getPersonalTypesByUser"
    }
    fn agent() -> &'static str {
        "transactions"
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsRegistryProductGetPersonalTypesByUserReturns(pub Vec<String>);
impl Schema for TransactionsRegistryProductGetPersonalTypesByUserReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"array\",\"items\":{\"type\":\"string\"}}")
    }
}
impl Agent for TransactionsRegistryProductGetPersonalTypesByUserReturns {
    fn topic() -> &'static str {
        "transactions_registryProduct_getPersonalTypesByUser"
    }
    fn method() -> &'static str {
        "registryProduct_getPersonalTypesByUser"
    }
    fn agent() -> &'static str {
        "transactions"
    }
}
