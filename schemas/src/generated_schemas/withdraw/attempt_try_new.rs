// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct WithdrawAttemptTryNewParams {
    #[serde(rename = "receiverAddress", deserialize_with = "deserialize_to_string")]
    pub receiver_address: String,
    #[serde(rename = "amount", deserialize_with = "deserialize_to_string")]
    pub amount: String,
}
impl Schema for WithdrawAttemptTryNewParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"receiverAddress\":{\"type\":\"string\",\"pattern\":\"^[a-z0-9-_]{2,56}(\\\\.testnet)$|^[a-z0-9]{64}$/.test(address)\"},\"amount\":{\"type\":\"string\"}},\"required\":[\"receiverAddress\",\"amount\"]}") . unwrap ()
    }
}
impl Agent for WithdrawAttemptTryNewParams {
    fn topic() -> &'static str {
        "withdraw_attempt_tryNew"
    }
    fn method() -> &'static str {
        "attempt_tryNew"
    }
    fn agent() -> &'static str {
        "withdraw"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct WithdrawAttemptTryNewReturns(pub bool);
impl Schema for WithdrawAttemptTryNewReturns {
    fn schema() -> Value {
        serde_json::json!("{\"type\":\"boolean\"}")
    }
}
impl Agent for WithdrawAttemptTryNewReturns {
    fn topic() -> &'static str {
        "withdraw_attempt_tryNew"
    }
    fn method() -> &'static str {
        "attempt_tryNew"
    }
    fn agent() -> &'static str {
        "withdraw"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
