// This file are autogenerated on build, everything you write here will be replaced

#![allow(unknown_lints)]
#![allow(clippy::all)]
use crate::generated_schemas::prelude::*;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct InventoryInventoryEndpointsHasUserProductParams {
    #[serde(rename = "productId")]
    pub product_id: i32,
}
impl Schema for InventoryInventoryEndpointsHasUserProductParams {
    fn schema() -> Value {
        serde_json :: from_str ("{\"type\":\"object\",\"properties\":{\"productId\":{\"type\":\"integer\",\"minimum\":-2147483648,\"maximum\":2147483647,\"additionalAttributes\":{\"numberType\":\"Int\"}}},\"required\":[\"productId\"]}") . unwrap ()
    }
}
impl Agent for InventoryInventoryEndpointsHasUserProductParams {
    fn topic() -> &'static str {
        "inventory_inventoryEndpoints_hasUserProduct"
    }
    fn method() -> &'static str {
        "inventoryEndpoints_hasUserProduct"
    }
    fn agent() -> &'static str {
        "inventory"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
impl<'de> Deserialize<'de> for InventoryInventoryEndpointsHasUserProductReturns {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        serde_json::Value::deserialize(deserializer)?;
        Ok(InventoryInventoryEndpointsHasUserProductReturns)
    }
}
#[derive(Debug, Clone, Serialize)]
pub struct InventoryInventoryEndpointsHasUserProductReturns;
impl Schema for InventoryInventoryEndpointsHasUserProductReturns {
    fn schema() -> Value {
        serde_json::json!("{}")
    }
}
impl Agent for InventoryInventoryEndpointsHasUserProductReturns {
    fn topic() -> &'static str {
        "inventory_inventoryEndpoints_hasUserProduct"
    }
    fn method() -> &'static str {
        "inventoryEndpoints_hasUserProduct"
    }
    fn agent() -> &'static str {
        "inventory"
    }
    fn access_level() -> AccessLevel {
        AccessLevel::Protected
    }
}
