#![allow(unknown_lints)]
#![allow(clippy::all)]

use crate::common::traits::{Convertable, EncodeError};
/// This file are autogenerated on build, everything you write here will be
/// replaced
use byte_formatter::{ByteDeserialize, ByteReader, ByteSerialize, ByteWriter, Error};
use serde::{Deserialize, Serialize};
use serde_json::Value;
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthLoginParamsObject {
    #[serde(rename = "appId")]
    pub app_id: Option<i32>,
    #[serde(rename = "deviceId")]
    pub device_id: Option<String>,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "password")]
    pub password: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthLoginReturnsObject {
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "expires_in")]
    pub expires_in: i32,
    #[serde(rename = "refresh_token")]
    pub refresh_token: String,
    #[serde(rename = "access_token")]
    pub access_token: String,
    #[serde(rename = "refresh_expires_in")]
    pub refresh_expires_in: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthLogin {
    Params(AuthAuthLoginParamsObject),
    Returns(AuthAuthLoginReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthSendRequestToResetPasswordParamsObject {
    #[serde(rename = "email")]
    pub email: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthSendRequestToResetPassword {
    Params(AuthAuthSendRequestToResetPasswordParamsObject),
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthResetPasswordParamsObject {
    #[serde(rename = "newPassword")]
    pub new_password: String,
    #[serde(rename = "hash")]
    pub hash: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthResetPassword {
    Params(AuthAuthResetPasswordParamsObject),
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthConfirmPasswordParamsObject {
    #[serde(rename = "password")]
    pub password: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthConfirmPassword {
    Params(AuthAuthConfirmPasswordParamsObject),
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthCreateRequestToConfirmEmailParamsObject {
    #[serde(rename = "deviceId")]
    pub device_id: Option<String>,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "referralCode")]
    pub referral_code: Option<String>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthCreateRequestToConfirmEmail {
    Params(AuthAuthCreateRequestToConfirmEmailParamsObject),
    Returns(String),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthConfirmEmailByCodeParamsObject {
    #[serde(rename = "emailHash")]
    pub email_hash: String,
    #[serde(rename = "code")]
    pub code: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthConfirmEmailByCode {
    Params(AuthAuthConfirmEmailByCodeParamsObject),
    Returns(String),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthDeleteEmailRequestParamsObject {
    #[serde(rename = "emailHash")]
    pub email_hash: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthDeleteEmailRequest {
    Params(AuthAuthDeleteEmailRequestParamsObject),
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthSetPasswordParamsObject {
    #[serde(rename = "providerId")]
    pub provider_id: Option<String>,
    #[serde(rename = "password")]
    pub password: String,
    #[serde(rename = "passwordHash")]
    pub password_hash: String,
    #[serde(rename = "appId")]
    pub app_id: Option<i32>,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthSetPasswordReturnsObject {
    #[serde(rename = "refresh_expires_in")]
    pub refresh_expires_in: i32,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "access_token")]
    pub access_token: String,
    #[serde(rename = "id_token")]
    pub id_token: String,
    #[serde(rename = "refresh_token")]
    pub refresh_token: String,
    #[serde(rename = "expires_in")]
    pub expires_in: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthSetPassword {
    Params(AuthAuthSetPasswordParamsObject),
    Returns(AuthAuthSetPasswordReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthResentConfirmationMailParamsObject {
    #[serde(rename = "email")]
    pub email: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthResentConfirmationMail {
    Params(AuthAuthResentConfirmationMailParamsObject),
    Returns(bool),
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthLogout {
    Params,
    Returns(bool),
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthEmptyMethod {
    Params,
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct AuthAuthAssignProviderAccountToDeviceIdParamsObject {
    #[serde(rename = "token")]
    pub token: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum AuthAuthAssignProviderAccountToDeviceId {
    Params(AuthAuthAssignProviderAccountToDeviceIdParamsObject),
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesGetSoftCurrencyBalanceReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesGetSoftCurrencyBalance {
    Params,
    Returns(BalancesBalancesGetSoftCurrencyBalanceReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesIncreaseSoftCurrencyParamsObject {
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "txId")]
    pub tx_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesIncreaseSoftCurrencyReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesIncreaseSoftCurrency {
    Params(BalancesBalancesIncreaseSoftCurrencyParamsObject),
    Returns(BalancesBalancesIncreaseSoftCurrencyReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesDecreaseSoftCurrencyParamsObject {
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "txId")]
    pub tx_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesDecreaseSoftCurrencyReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesDecreaseSoftCurrency {
    Params(BalancesBalancesDecreaseSoftCurrencyParamsObject),
    Returns(BalancesBalancesDecreaseSoftCurrencyReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesAddFreeExperienceParamsObject {
    #[serde(rename = "amount")]
    pub amount: i16,
    #[serde(rename = "txId")]
    pub tx_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesAddFreeExperienceReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesAddFreeExperience {
    Params(BalancesBalancesAddFreeExperienceParamsObject),
    Returns(BalancesBalancesAddFreeExperienceReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesUseFreeExperienceParamsObject {
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "txId")]
    pub tx_id: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesUseFreeExperience {
    Params(BalancesBalancesUseFreeExperienceParamsObject),
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesGetBalancesByUserIdReturnsObject {
    #[serde(rename = "freeExperience")]
    pub free_experience: i32,
    #[serde(rename = "softCurrency")]
    pub soft_currency: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesGetBalancesByUserId {
    Params,
    Returns(BalancesBalancesGetBalancesByUserIdReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesGetFreeExperienceBalanceReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesGetFreeExperienceBalance {
    Params,
    Returns(BalancesBalancesGetFreeExperienceBalanceReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct BalancesBalancesFreeExperienceAddedNotificationReturnsObject {
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BalancesBalancesFreeExperienceAddedNotification {
    Params,
    Returns(BalancesBalancesFreeExperienceAddedNotificationReturnsObject),
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum GameBalancerGameBalancerStopSearching {
    Params,
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct GameBalancerGameBalancerGameStartedNotificationReturnsObject {
    #[serde(rename = "roomStarted")]
    pub room_started: bool,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum GameBalancerGameBalancerGameStartedNotification {
    Params,
    Returns(GameBalancerGameBalancerGameStartedNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct GameBalancerGameBalancerCheckInNotificationReturnsObject22 {
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct GameBalancerGameBalancerCheckInNotificationReturnsObject2 {
    #[serde(rename = "nickname")]
    pub nickname: String,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "attributes")]
    pub attributes: GameBalancerGameBalancerCheckInNotificationReturnsObject22,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct GameBalancerGameBalancerCheckInNotificationReturnsObject {
    #[serde(rename = "roomUdpPort")]
    pub room_udp_port: i32,
    #[serde(rename = "authToken")]
    pub auth_token: String,
    #[serde(rename = "players")]
    pub players: Vec<GameBalancerGameBalancerCheckInNotificationReturnsObject2>,
    #[serde(rename = "roomTcpPort")]
    pub room_tcp_port: i32,
    #[serde(rename = "roomId")]
    pub room_id: i32,
    #[serde(rename = "roomHost")]
    pub room_host: String,
    #[serde(rename = "teamId")]
    pub team_id: i8,
    #[serde(rename = "apiVersion")]
    pub api_version: String,
    #[serde(rename = "success")]
    pub success: bool,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum GameBalancerGameBalancerCheckInNotification {
    Params,
    Returns(GameBalancerGameBalancerCheckInNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject10 {
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject18 {
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
    #[serde(rename = "equipment")]
    pub equipment: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject115 {
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject1 {
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject10,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "slots")]
    pub slots: Vec<ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject18>,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "attributes")]
    pub attributes: ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject115,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject {
    #[serde(rename = "reason")]
    pub reason: i8,
    #[serde(rename = "hero")]
    pub hero: ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject1,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageHeroesEndpointsStatsUpdatedNotification {
    Params,
    Returns(ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject0 {
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
    #[serde(rename = "equipment")]
    pub equipment: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject6 {
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject15 {
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject {
    #[serde(rename = "slots")]
    pub slots: Vec<ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject0>,
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject6,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "attributes")]
    pub attributes: ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject15,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageHeroesEndpointsGetHeroesListByUserId {
    Params,
    Returns(Vec<ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject>),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsGiveFreeExperienceToHeroParamsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageHeroesEndpointsGiveFreeExperienceToHero {
    Params(ListeriaStorageHeroesEndpointsGiveFreeExperienceToHeroParamsObject),
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject3 {
    #[serde(rename = "equipment")]
    pub equipment: i8,
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject7 {
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject11 {
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject {
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "slots")]
    pub slots: Vec<ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject3>,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "attributes")]
    pub attributes: ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject7,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject11,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageHeroesEndpointsHeroAddedNotification {
    Params,
    Returns(ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageHeroesEndpointsLevelUpParamsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageHeroesEndpointsLevelUp {
    Params(ListeriaStorageHeroesEndpointsLevelUpParamsObject),
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject0 {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "lootboxId")]
    pub lootbox_id: i32,
    #[serde(rename = "status")]
    pub status: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject {
    #[serde(rename = "lootboxes")]
    pub lootboxes: Vec<ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject0>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageInventoryEndpointsGetLootboxesList {
    Params,
    Returns(ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageInventoryEndpointsOpenLootboxParamsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageInventoryEndpointsOpenLootbox {
    Params(ListeriaStorageInventoryEndpointsOpenLootboxParamsObject),
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageInventoryEndpointsGetItemsListReturnsObject8 {
    #[serde(rename = "power")]
    pub power: String,
    #[serde(rename = "statName")]
    pub stat_name: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageInventoryEndpointsGetItemsListReturnsObject {
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "equipmentItemId")]
    pub equipment_item_id: i32,
    #[serde(rename = "effects")]
    pub effects: Vec<ListeriaStorageInventoryEndpointsGetItemsListReturnsObject8>,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageInventoryEndpointsGetItemsList {
    Params,
    Returns(Vec<ListeriaStorageInventoryEndpointsGetItemsListReturnsObject>),
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageInventoryEndpointsGetHeroScrollsCount {
    Params,
    Returns(i32),
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageInventoryEndpointsGetEquipmentScrollsCount {
    Params,
    Returns(i32),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageInventoryEndpointsAddedUnequippableItemNotificationReturnsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "type")]
    pub rust_keyword_type: i32,
    #[serde(rename = "itemId")]
    pub item_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageInventoryEndpointsAddedUnequippableItemNotification {
    Params,
    Returns(ListeriaStorageInventoryEndpointsAddedUnequippableItemNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ListeriaStorageInventoryEndpointsLevelUpParamsObject {
    #[serde(rename = "itemId")]
    pub item_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ListeriaStorageInventoryEndpointsLevelUp {
    Params(ListeriaStorageInventoryEndpointsLevelUpParamsObject),
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsEquipItemParamsObject {
    #[serde(rename = "itemId")]
    pub item_id: i32,
    #[serde(rename = "slotId")]
    pub slot_id: i32,
    #[serde(rename = "heroId")]
    pub hero_id: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsEquipItemReturnsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i32,
    #[serde(rename = "itemId")]
    pub item_id: i32,
    #[serde(rename = "slotId")]
    pub slot_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyEquipmentEndpointsEquipItem {
    Params(LobbyEquipmentEndpointsEquipItemParamsObject),
    Returns(LobbyEquipmentEndpointsEquipItemReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsUnequipItemParamsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "heroBindingId")]
    pub hero_binding_id: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsUnequipItemReturnsObject {
    #[serde(rename = "heroBindingId")]
    pub hero_binding_id: i32,
    #[serde(rename = "slotId")]
    pub slot_id: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyEquipmentEndpointsUnequipItem {
    Params(LobbyEquipmentEndpointsUnequipItemParamsObject),
    Returns(LobbyEquipmentEndpointsUnequipItemReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsAddedItemNotificationReturnsObject8 {
    #[serde(rename = "power")]
    pub power: String,
    #[serde(rename = "statName")]
    pub stat_name: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsAddedItemNotificationReturnsObject {
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "effects")]
    pub effects: Vec<LobbyEquipmentEndpointsAddedItemNotificationReturnsObject8>,
    #[serde(rename = "equipmentItemId")]
    pub equipment_item_id: i32,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyEquipmentEndpointsAddedItemNotification {
    Params,
    Returns(LobbyEquipmentEndpointsAddedItemNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject5 {
    #[serde(rename = "statName")]
    pub stat_name: i8,
    #[serde(rename = "power")]
    pub power: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject {
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "effects")]
    pub effects: Vec<LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject5>,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "equipmentItemId")]
    pub equipment_item_id: i32,
    #[serde(rename = "level")]
    pub level: i16,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyEquipmentEndpointsUpdatedItemNotification {
    Params,
    Returns(LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyHeroesEndpointsEquipHeroParamsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyHeroesEndpointsEquipHero {
    Params(LobbyHeroesEndpointsEquipHeroParamsObject),
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyHeroesEndpointsGetHeroesListReturnsObject0 {
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: Vec<String>,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: Vec<String>,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: Vec<String>,
    #[serde(rename = "health")]
    pub health: Vec<String>,
    #[serde(rename = "ultPower")]
    pub ult_power: Vec<String>,
    #[serde(rename = "intelligence")]
    pub intelligence: Vec<String>,
    #[serde(rename = "skillPower")]
    pub skill_power: Vec<String>,
    #[serde(rename = "agility")]
    pub agility: Vec<String>,
    #[serde(rename = "moveSpeed")]
    pub move_speed: Vec<String>,
    #[serde(rename = "strength")]
    pub strength: Vec<String>,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: Vec<String>,
    #[serde(rename = "attackDamage")]
    pub attack_damage: Vec<String>,
    #[serde(rename = "armor")]
    pub armor: Vec<String>,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: Vec<String>,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyHeroesEndpointsGetHeroesListReturnsObject {
    #[serde(rename = "statsRanges")]
    pub stats_ranges: LobbyHeroesEndpointsGetHeroesListReturnsObject0,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyHeroesEndpointsGetHeroesList {
    Params,
    Returns(Vec<LobbyHeroesEndpointsGetHeroesListReturnsObject>),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject8 {
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject9 {
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject12 {
    #[serde(rename = "equipment")]
    pub equipment: i8,
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject {
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: LobbyHeroesEndpointsHeroAddedNotificationReturnsObject8,
    #[serde(rename = "attributes")]
    pub attributes: LobbyHeroesEndpointsHeroAddedNotificationReturnsObject9,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "slots")]
    pub slots: Vec<LobbyHeroesEndpointsHeroAddedNotificationReturnsObject12>,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyHeroesEndpointsHeroAddedNotification {
    Params,
    Returns(LobbyHeroesEndpointsHeroAddedNotificationReturnsObject),
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyLobbyStartGame {
    Params,
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyRegionsGetReturnsObject2 {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "host")]
    pub host: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyRegionsGetReturnsObject {
    #[serde(rename = "active")]
    pub active: String,
    #[serde(rename = "isFixed")]
    pub is_fixed: bool,
    #[serde(rename = "list")]
    pub list: Vec<LobbyRegionsGetReturnsObject2>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyRegionsGet {
    Params,
    Returns(LobbyRegionsGetReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyRegionsSetParamsObject {
    #[serde(rename = "isFixed")]
    pub is_fixed: bool,
    #[serde(rename = "regionName")]
    pub region_name: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyRegionsSet {
    Params(LobbyRegionsSetParamsObject),
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbySettingsGetReturnsObject {
    #[serde(rename = "music")]
    pub music: bool,
    #[serde(rename = "sounds")]
    pub sounds: bool,
    #[serde(rename = "quality")]
    pub quality: i8,
    #[serde(rename = "HFREffects")]
    pub hfr_effects: i8,
    #[serde(rename = "isChanged")]
    pub is_changed: bool,
    #[serde(rename = "language")]
    pub language: i8,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbySettingsGet {
    Params,
    Returns(LobbySettingsGetReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbySettingsSetParamsObject {
    #[serde(rename = "HFREffects")]
    pub hfr_effects: i8,
    #[serde(rename = "sounds")]
    pub sounds: bool,
    #[serde(rename = "language")]
    pub language: i8,
    #[serde(rename = "music")]
    pub music: bool,
    #[serde(rename = "quality")]
    pub quality: i8,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbySettingsSet {
    Params(LobbySettingsSetParamsObject),
    Returns,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeParamsObject {
    #[serde(rename = "personalType")]
    pub personal_type: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject0 {
    #[serde(rename = "scrollsCount")]
    pub scrolls_count: i32,
    #[serde(rename = "level")]
    pub level: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject1 {
    #[serde(rename = "level")]
    pub level: i32,
    #[serde(rename = "coefficient")]
    pub coefficient: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject {
    #[serde(rename = "scrollsByLevels")]
    pub scrolls_by_levels: Vec<LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject0>,
    #[serde(rename = "experienceCoefficients")]
    pub experience_coefficients: Vec<LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject1>,
    #[serde(rename = "maxLevel")]
    pub max_level: i32,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "baseScrollsCount")]
    pub base_scrolls_count: i32,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "baseExperience")]
    pub base_experience: i32,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "experience")]
    pub experience: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyStatsEndpointsGetLevelUpOptionsByPersonalType {
    Params(LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeParamsObject),
    Returns(LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserGetUserDataReturnsObject {
    #[serde(rename = "image")]
    pub image: i8,
    #[serde(rename = "tokensIncreaseBy")]
    pub tokens_increase_by: String,
    #[serde(rename = "decreaseBy")]
    pub decrease_by: i8,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "increaseBy")]
    pub increase_by: i8,
    #[serde(rename = "rating")]
    pub rating: i32,
    #[serde(rename = "draw")]
    pub draw: i8,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "placeInLeaderBoard")]
    pub place_in_leader_board: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyUserGetUserData {
    Params,
    Returns(LobbyUserGetUserDataReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserUpdateUsernameParamsObject {
    #[serde(rename = "newUsername")]
    pub new_username: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserUpdateUsernameReturnsObject {
    #[serde(rename = "newUsername")]
    pub new_username: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyUserUpdateUsername {
    Params(LobbyUserUpdateUsernameParamsObject),
    Returns(LobbyUserUpdateUsernameReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserGetLeaderBoardParamsObject {
    #[serde(rename = "page")]
    pub page: i16,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserGetLeaderBoardReturnsObject2 {
    #[serde(rename = "place")]
    pub place: i32,
    #[serde(rename = "rating")]
    pub rating: i32,
    #[serde(rename = "username")]
    pub username: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserGetLeaderBoardReturnsObject {
    #[serde(rename = "pages")]
    pub pages: i16,
    #[serde(rename = "page")]
    pub page: i16,
    #[serde(rename = "leaderboard")]
    pub leaderboard: Vec<LobbyUserGetLeaderBoardReturnsObject2>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyUserGetLeaderBoard {
    Params(LobbyUserGetLeaderBoardParamsObject),
    Returns(LobbyUserGetLeaderBoardReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserUpdateProfileImageParamsObject {
    #[serde(rename = "image")]
    pub image: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct LobbyUserUpdateProfileImageReturnsObject {
    #[serde(rename = "imageId")]
    pub image_id: i8,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum LobbyUserUpdateProfileImage {
    Params(LobbyUserUpdateProfileImageParamsObject),
    Returns(LobbyUserUpdateProfileImageReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct MarketItemsGetLootboxesListReturnsObject0 {
    #[serde(rename = "price")]
    pub price: String,
    #[serde(rename = "productType")]
    pub product_type: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "currencyType")]
    pub currency_type: String,
    #[serde(rename = "type")]
    pub rust_keyword_type: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct MarketItemsGetLootboxesListReturnsObject {
    #[serde(rename = "product")]
    pub product: Vec<MarketItemsGetLootboxesListReturnsObject0>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum MarketItemsGetLootboxesList {
    Params,
    Returns(MarketItemsGetLootboxesListReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ProductFactoryLootboxTypeGetByLootboxIdParamsObject {
    #[serde(rename = "lootboxId")]
    pub lootbox_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ProductFactoryLootboxTypeGetByLootboxIdReturnsObject {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "lootboxId")]
    pub lootbox_id: String,
    #[serde(rename = "dropChanceMultiplier")]
    pub drop_chance_multiplier: i32,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ProductFactoryLootboxTypeGetByLootboxId {
    Params(ProductFactoryLootboxTypeGetByLootboxIdParamsObject),
    Returns(ProductFactoryLootboxTypeGetByLootboxIdReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ProductFactoryProductLootboxOpenedNotificationReturnsObject1 {
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "itemId")]
    pub item_id: i32,
    #[serde(rename = "type")]
    pub rust_keyword_type: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct ProductFactoryProductLootboxOpenedNotificationReturnsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "rewards")]
    pub rewards: Vec<ProductFactoryProductLootboxOpenedNotificationReturnsObject1>,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ProductFactoryProductLootboxOpenedNotification {
    Params,
    Returns(ProductFactoryProductLootboxOpenedNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PromoCodesUseCodeParamsObject {
    #[serde(rename = "code")]
    pub code: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PromoCodesUseCodeReturnsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "rewardType")]
    pub reward_type: String,
    #[serde(rename = "currencyKey")]
    pub currency_key: String,
    #[serde(rename = "currencyAmount")]
    pub currency_amount: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PromoCodesUseCode {
    Params(PromoCodesUseCodeParamsObject),
    Returns(Vec<PromoCodesUseCodeReturnsObject>),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseBalanceUserBalanceChangedNotificationReturnsObject {
    #[serde(rename = "balance")]
    pub balance: String,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: String,
    #[serde(rename = "blockId")]
    pub block_id: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PurchaseBalanceUserBalanceChangedNotification {
    Params,
    Returns(PurchaseBalanceUserBalanceChangedNotificationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseProductPurchaseLootboxParamsObject {
    #[serde(rename = "lootboxType")]
    pub lootbox_type: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PurchaseProductPurchaseLootbox {
    Params(PurchaseProductPurchaseLootboxParamsObject),
    Returns(bool),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseProductGetHeroListReturnsObject4 {
    #[serde(rename = "strength")]
    pub strength: i32,
    #[serde(rename = "intelligence")]
    pub intelligence: i32,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: i32,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "health")]
    pub health: i32,
    #[serde(rename = "skillPower")]
    pub skill_power: i32,
    #[serde(rename = "ultPower")]
    pub ult_power: i32,
    #[serde(rename = "attackDamage")]
    pub attack_damage: i32,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: i32,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "agility")]
    pub agility: i32,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseProductGetHeroListReturnsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "productType")]
    pub product_type: String,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "price")]
    pub price: String,
    #[serde(rename = "stats")]
    pub stats: PurchaseProductGetHeroListReturnsObject4,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PurchaseProductGetHeroList {
    Params,
    Returns(Vec<PurchaseProductGetHeroListReturnsObject>),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseProductGetEquipmentListReturnsObject2 {
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: i32,
    #[serde(rename = "health")]
    pub health: i32,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: i32,
    #[serde(rename = "strength")]
    pub strength: i32,
    #[serde(rename = "ultPower")]
    pub ult_power: i32,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "agility")]
    pub agility: i32,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: i32,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "intelligence")]
    pub intelligence: i32,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "skillPower")]
    pub skill_power: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseProductGetEquipmentListReturnsObject {
    #[serde(rename = "equipmentId")]
    pub equipment_id: i32,
    #[serde(rename = "price")]
    pub price: String,
    #[serde(rename = "stats")]
    pub stats: PurchaseProductGetEquipmentListReturnsObject2,
    #[serde(rename = "productType")]
    pub product_type: String,
    #[serde(rename = "currency")]
    pub currency: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PurchaseProductGetEquipmentList {
    Params,
    Returns(Vec<PurchaseProductGetEquipmentListReturnsObject>),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseWalletGetByUserIdReturnsObject {
    #[serde(rename = "address")]
    pub address: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PurchaseWalletGetByUserId {
    Params,
    Returns(PurchaseWalletGetByUserIdReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseWalletGetWalletByUserIdParamsObject {
    #[serde(rename = "userId")]
    pub user_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct PurchaseWalletGetWalletByUserIdReturnsObject {
    #[serde(rename = "address")]
    pub address: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PurchaseWalletGetWalletByUserId {
    Params(PurchaseWalletGetWalletByUserIdParamsObject),
    Returns(PurchaseWalletGetWalletByUserIdReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct TransactionsBalanceGetBalanceByUserIdParamsObject {
    #[serde(rename = "currency")]
    pub currency: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct TransactionsBalanceGetBalanceByUserIdReturnsObject {
    #[serde(rename = "amount")]
    pub amount: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum TransactionsBalanceGetBalanceByUserId {
    Params(TransactionsBalanceGetBalanceByUserIdParamsObject),
    Returns(TransactionsBalanceGetBalanceByUserIdReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct TransactionsBalanceGetBalancesByUserIdReturnsObject {
    #[serde(rename = "LIS")]
    pub lis: String,
    #[serde(rename = "ETH")]
    pub eth: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum TransactionsBalanceGetBalancesByUserId {
    Params,
    Returns(TransactionsBalanceGetBalancesByUserIdReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct TransactionsBalanceGetBalancesByUserIdAsArrayReturnsObject {
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "amount")]
    pub amount: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum TransactionsBalanceGetBalancesByUserIdAsArray {
    Params,
    Returns(Vec<TransactionsBalanceGetBalancesByUserIdAsArrayReturnsObject>),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct TransactionsBalanceGetListWithPaginationParamsObject {
    #[serde(rename = "page")]
    pub page: i16,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct TransactionsBalanceGetListWithPaginationReturnsObject0 {
    #[serde(rename = "balanceChange")]
    pub balance_change: String,
    #[serde(rename = "dateTime")]
    pub date_time: String,
    #[serde(rename = "blockId")]
    pub block_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct TransactionsBalanceGetListWithPaginationReturnsObject {
    #[serde(rename = "list")]
    pub list: Vec<TransactionsBalanceGetListWithPaginationReturnsObject0>,
    #[serde(rename = "page")]
    pub page: i16,
    #[serde(rename = "pages")]
    pub pages: i16,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum TransactionsBalanceGetListWithPagination {
    Params(TransactionsBalanceGetListWithPaginationParamsObject),
    Returns(TransactionsBalanceGetListWithPaginationReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct UserProfileGetMyProfileForBytesReturnsObject {
    #[serde(rename = "nickname")]
    pub nickname: String,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "suspicious")]
    pub suspicious: bool,
    #[serde(rename = "isSubscribedToMailing")]
    pub is_subscribed_to_mailing: bool,
    #[serde(rename = "isConfirmed")]
    pub is_confirmed: bool,
    #[serde(rename = "isBanned")]
    pub is_banned: bool,
    #[serde(rename = "isDeleted")]
    pub is_deleted: bool,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "notice")]
    pub notice: String,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "isNicknameChanged")]
    pub is_nickname_changed: bool,
    #[serde(rename = "verified")]
    pub verified: bool,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "registeredAt")]
    pub registered_at: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum UserProfileGetMyProfileForBytes {
    Params,
    Returns(UserProfileGetMyProfileForBytesReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct UserProfileGetTestDataReturnsObject {
    #[serde(rename = "hello")]
    pub hello: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum UserProfileGetTestData {
    Params,
    Returns(UserProfileGetTestDataReturnsObject),
}
#[derive(Debug, Clone, Serialize, Deserialize, ByteSerialize, ByteDeserialize)]
pub struct OrchestratorLootboxPurchaseParamsObject {
    #[serde(rename = "personalType")]
    pub personal_type: String,
}
#[derive(Debug, Serialize, Deserialize)]
#[serde(untagged)]
pub enum OrchestratorLootboxPurchase {
    Params(OrchestratorLootboxPurchaseParamsObject),
    Returns(bool),
}
