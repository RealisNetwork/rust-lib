#![allow(unknown_lints)]
#![allow(clippy::all)]

use crate::common::traits::{Convertable, EncodeError};
/// This file are autogenerated on build, everything you write here will be
/// replaced
use byte_formatter::{ByteDeserialize, ByteReader, ByteSerialize, ByteWriter, Error};
use serde::{Deserialize, Serialize};
use serde_json::Value;
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthLoginParamsObject {
    #[serde(rename = "appId")]
    pub app_id: Option<i32>,
    #[serde(rename = "password")]
    pub password: String,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "deviceId")]
    pub device_id: Option<String>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthLoginReturnsObject {
    #[serde(rename = "refresh_token")]
    pub refresh_token: String,
    #[serde(rename = "expires_in")]
    pub expires_in: i32,
    #[serde(rename = "refresh_expires_in")]
    pub refresh_expires_in: i32,
    #[serde(rename = "access_token")]
    pub access_token: String,
    #[serde(rename = "userId")]
    pub user_id: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthLogin {
    pub params: AuthAuthLoginParamsObject,
    pub returns: AuthAuthLoginReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthSendRequestToResetPasswordParamsObject {
    #[serde(rename = "email")]
    pub email: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthSendRequestToResetPassword {
    pub params: AuthAuthSendRequestToResetPasswordParamsObject,
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthResetPasswordParamsObject {
    #[serde(rename = "newPassword")]
    pub new_password: String,
    #[serde(rename = "hash")]
    pub hash: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthResetPassword {
    pub params: AuthAuthResetPasswordParamsObject,
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthConfirmPasswordParamsObject {
    #[serde(rename = "password")]
    pub password: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthConfirmPassword {
    pub params: AuthAuthConfirmPasswordParamsObject,
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthCreateRequestToConfirmEmailParamsObject {
    #[serde(rename = "deviceId")]
    pub device_id: Option<String>,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "referralCode")]
    pub referral_code: Option<String>,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthCreateRequestToConfirmEmail {
    pub params: AuthAuthCreateRequestToConfirmEmailParamsObject,
    pub returns: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthConfirmEmailByCodeParamsObject {
    #[serde(rename = "emailHash")]
    pub email_hash: String,
    #[serde(rename = "code")]
    pub code: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthConfirmEmailByCode {
    pub params: AuthAuthConfirmEmailByCodeParamsObject,
    pub returns: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthDeleteEmailRequestParamsObject {
    #[serde(rename = "emailHash")]
    pub email_hash: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthDeleteEmailRequest {
    pub params: AuthAuthDeleteEmailRequestParamsObject,
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthSetPasswordParamsObject {
    #[serde(rename = "appId")]
    pub app_id: Option<i32>,
    #[serde(rename = "password")]
    pub password: String,
    #[serde(rename = "passwordHash")]
    pub password_hash: String,
    #[serde(rename = "providerId")]
    pub provider_id: Option<String>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthSetPasswordReturnsObject {
    #[serde(rename = "access_token")]
    pub access_token: String,
    #[serde(rename = "refresh_token")]
    pub refresh_token: String,
    #[serde(rename = "refresh_expires_in")]
    pub refresh_expires_in: i32,
    #[serde(rename = "expires_in")]
    pub expires_in: i32,
    #[serde(rename = "id_token")]
    pub id_token: String,
    #[serde(rename = "userId")]
    pub user_id: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthSetPassword {
    pub params: AuthAuthSetPasswordParamsObject,
    pub returns: AuthAuthSetPasswordReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthResentConfirmationMailParamsObject {
    #[serde(rename = "email")]
    pub email: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthResentConfirmationMail {
    pub params: AuthAuthResentConfirmationMailParamsObject,
    pub returns: bool,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthLogout {
    pub returns: bool,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthEmptyMethod {
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct AuthAuthAssignProviderAccountToDeviceIdParamsObject {
    #[serde(rename = "token")]
    pub token: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct AuthAuthAssignProviderAccountToDeviceId {
    pub params: AuthAuthAssignProviderAccountToDeviceIdParamsObject,
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesGetSoftCurrencyBalanceReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesGetSoftCurrencyBalance {
    pub returns: BalancesBalancesGetSoftCurrencyBalanceReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesIncreaseSoftCurrencyParamsObject {
    #[serde(rename = "txId")]
    pub tx_id: String,
    #[serde(rename = "amount")]
    pub amount: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesIncreaseSoftCurrencyReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesIncreaseSoftCurrency {
    pub params: BalancesBalancesIncreaseSoftCurrencyParamsObject,
    pub returns: BalancesBalancesIncreaseSoftCurrencyReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesDecreaseSoftCurrencyParamsObject {
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "txId")]
    pub tx_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesDecreaseSoftCurrencyReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesDecreaseSoftCurrency {
    pub params: BalancesBalancesDecreaseSoftCurrencyParamsObject,
    pub returns: BalancesBalancesDecreaseSoftCurrencyReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesAddFreeExperienceParamsObject {
    #[serde(rename = "amount")]
    pub amount: i16,
    #[serde(rename = "txId")]
    pub tx_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesAddFreeExperienceReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesAddFreeExperience {
    pub params: BalancesBalancesAddFreeExperienceParamsObject,
    pub returns: BalancesBalancesAddFreeExperienceReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesUseFreeExperienceParamsObject {
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "txId")]
    pub tx_id: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesUseFreeExperience {
    pub params: BalancesBalancesUseFreeExperienceParamsObject,
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesGetBalancesByUserIdReturnsObject {
    #[serde(rename = "softCurrency")]
    pub soft_currency: i32,
    #[serde(rename = "freeExperience")]
    pub free_experience: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesGetBalancesByUserId {
    pub returns: BalancesBalancesGetBalancesByUserIdReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesGetFreeExperienceBalanceReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesGetFreeExperienceBalance {
    pub returns: BalancesBalancesGetFreeExperienceBalanceReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct BalancesBalancesFreeExperienceAddedNotificationReturnsObject {
    #[serde(rename = "balance")]
    pub balance: i32,
    #[serde(rename = "amount")]
    pub amount: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct BalancesBalancesFreeExperienceAddedNotification {
    pub returns: BalancesBalancesFreeExperienceAddedNotificationReturnsObject,
}
#[derive(Debug, Serialize, Deserialize)]
struct GameBalancerGameBalancerStopSearching {
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct GameBalancerGameBalancerGameStartedNotificationReturnsObject {
    #[serde(rename = "roomStarted")]
    pub room_started: bool,
}
#[derive(Debug, Serialize, Deserialize)]
struct GameBalancerGameBalancerGameStartedNotification {
    pub returns: GameBalancerGameBalancerGameStartedNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct GameBalancerGameBalancerCheckInNotificationReturnsObject33 {
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct GameBalancerGameBalancerCheckInNotificationReturnsObject3 {
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "nickname")]
    pub nickname: String,
    #[serde(rename = "attributes")]
    pub attributes: GameBalancerGameBalancerCheckInNotificationReturnsObject33,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct GameBalancerGameBalancerCheckInNotificationReturnsObject {
    #[serde(rename = "roomTcpPort")]
    pub room_tcp_port: i32,
    #[serde(rename = "roomUdpPort")]
    pub room_udp_port: i32,
    #[serde(rename = "success")]
    pub success: bool,
    #[serde(rename = "players")]
    pub players: Vec<GameBalancerGameBalancerCheckInNotificationReturnsObject3>,
    #[serde(rename = "roomHost")]
    pub room_host: String,
    #[serde(rename = "teamId")]
    pub team_id: i8,
    #[serde(rename = "apiVersion")]
    pub api_version: String,
    #[serde(rename = "authToken")]
    pub auth_token: String,
    #[serde(rename = "roomId")]
    pub room_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct GameBalancerGameBalancerCheckInNotification {
    pub returns: GameBalancerGameBalancerCheckInNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject06 {
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
    #[serde(rename = "equipment")]
    pub equipment: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject07 {
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "armor")]
    pub armor: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject013 {
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject0 {
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "slots")]
    pub slots: Vec<ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject06>,
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject07,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "attributes")]
    pub attributes: ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject013,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject {
    #[serde(rename = "hero")]
    pub hero: ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject0,
    #[serde(rename = "reason")]
    pub reason: i8,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageHeroesEndpointsStatsUpdatedNotification {
    pub returns: ListeriaStorageHeroesEndpointsStatsUpdatedNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject4 {
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject7 {
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject12 {
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
    #[serde(rename = "equipment")]
    pub equipment: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject4,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "attributes")]
    pub attributes: ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject7,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "slots")]
    pub slots: Vec<ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject12>,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageHeroesEndpointsGetHeroesListByUserId {
    pub returns: Vec<ListeriaStorageHeroesEndpointsGetHeroesListByUserIdReturnsObject>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsGiveFreeExperienceToHeroParamsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageHeroesEndpointsGiveFreeExperienceToHero {
    pub params: ListeriaStorageHeroesEndpointsGiveFreeExperienceToHeroParamsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject10 {
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject11 {
    #[serde(rename = "equipment")]
    pub equipment: i8,
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject15 {
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject {
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "attributes")]
    pub attributes: ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject10,
    #[serde(rename = "slots")]
    pub slots: Vec<ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject11>,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject15,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageHeroesEndpointsHeroAddedNotification {
    pub returns: ListeriaStorageHeroesEndpointsHeroAddedNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageHeroesEndpointsLevelUpParamsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageHeroesEndpointsLevelUp {
    pub params: ListeriaStorageHeroesEndpointsLevelUpParamsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject0 {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "lootboxId")]
    pub lootbox_id: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject {
    #[serde(rename = "lootboxes")]
    pub lootboxes: Vec<ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject0>,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageInventoryEndpointsGetLootboxesList {
    pub returns: ListeriaStorageInventoryEndpointsGetLootboxesListReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageInventoryEndpointsOpenLootboxParamsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageInventoryEndpointsOpenLootbox {
    pub params: ListeriaStorageInventoryEndpointsOpenLootboxParamsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageInventoryEndpointsGetItemsListReturnsObject9 {
    #[serde(rename = "power")]
    pub power: String,
    #[serde(rename = "statName")]
    pub stat_name: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageInventoryEndpointsGetItemsListReturnsObject {
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "equipmentItemId")]
    pub equipment_item_id: i32,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "effects")]
    pub effects: Vec<ListeriaStorageInventoryEndpointsGetItemsListReturnsObject9>,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageInventoryEndpointsGetItemsList {
    pub returns: Vec<ListeriaStorageInventoryEndpointsGetItemsListReturnsObject>,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageInventoryEndpointsGetHeroScrollsCount {
    pub returns: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageInventoryEndpointsGetEquipmentScrollsCount {
    pub returns: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageInventoryEndpointsAddedUnequippableItemNotificationReturnsObject {
    #[serde(rename = "type")]
    pub rust_keyword_type: i32,
    #[serde(rename = "itemId")]
    pub item_id: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageInventoryEndpointsAddedUnequippableItemNotification {
    pub returns: ListeriaStorageInventoryEndpointsAddedUnequippableItemNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ListeriaStorageInventoryEndpointsLevelUpParamsObject {
    #[serde(rename = "itemId")]
    pub item_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct ListeriaStorageInventoryEndpointsLevelUp {
    pub params: ListeriaStorageInventoryEndpointsLevelUpParamsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsEquipItemParamsObject {
    #[serde(rename = "slotId")]
    pub slot_id: i32,
    #[serde(rename = "heroId")]
    pub hero_id: i32,
    #[serde(rename = "itemId")]
    pub item_id: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsEquipItemReturnsObject {
    #[serde(rename = "itemId")]
    pub item_id: i32,
    #[serde(rename = "heroId")]
    pub hero_id: i32,
    #[serde(rename = "slotId")]
    pub slot_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyEquipmentEndpointsEquipItem {
    pub params: LobbyEquipmentEndpointsEquipItemParamsObject,
    pub returns: LobbyEquipmentEndpointsEquipItemReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsUnequipItemParamsObject {
    #[serde(rename = "heroBindingId")]
    pub hero_binding_id: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsUnequipItemReturnsObject {
    #[serde(rename = "heroBindingId")]
    pub hero_binding_id: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "slotId")]
    pub slot_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyEquipmentEndpointsUnequipItem {
    pub params: LobbyEquipmentEndpointsUnequipItemParamsObject,
    pub returns: LobbyEquipmentEndpointsUnequipItemReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsAddedItemNotificationReturnsObject9 {
    #[serde(rename = "power")]
    pub power: String,
    #[serde(rename = "statName")]
    pub stat_name: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsAddedItemNotificationReturnsObject {
    #[serde(rename = "equipmentItemId")]
    pub equipment_item_id: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "effects")]
    pub effects: Vec<LobbyEquipmentEndpointsAddedItemNotificationReturnsObject9>,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyEquipmentEndpointsAddedItemNotification {
    pub returns: LobbyEquipmentEndpointsAddedItemNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject8 {
    #[serde(rename = "statName")]
    pub stat_name: i8,
    #[serde(rename = "power")]
    pub power: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject {
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "equipmentItemId")]
    pub equipment_item_id: i32,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "effects")]
    pub effects: Vec<LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject8>,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyEquipmentEndpointsUpdatedItemNotification {
    pub returns: LobbyEquipmentEndpointsUpdatedItemNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyHeroesEndpointsEquipHeroParamsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyHeroesEndpointsEquipHero {
    pub params: LobbyHeroesEndpointsEquipHeroParamsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyHeroesEndpointsGetHeroesListReturnsObject1 {
    #[serde(rename = "skillPower")]
    pub skill_power: Vec<String>,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: Vec<String>,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: Vec<String>,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: Vec<String>,
    #[serde(rename = "strength")]
    pub strength: Vec<String>,
    #[serde(rename = "health")]
    pub health: Vec<String>,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: Vec<String>,
    #[serde(rename = "agility")]
    pub agility: Vec<String>,
    #[serde(rename = "attackDamage")]
    pub attack_damage: Vec<String>,
    #[serde(rename = "intelligence")]
    pub intelligence: Vec<String>,
    #[serde(rename = "moveSpeed")]
    pub move_speed: Vec<String>,
    #[serde(rename = "armor")]
    pub armor: Vec<String>,
    #[serde(rename = "ultPower")]
    pub ult_power: Vec<String>,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: Vec<String>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyHeroesEndpointsGetHeroesListReturnsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "statsRanges")]
    pub stats_ranges: LobbyHeroesEndpointsGetHeroesListReturnsObject1,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyHeroesEndpointsGetHeroesList {
    pub returns: Vec<LobbyHeroesEndpointsGetHeroesListReturnsObject>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject10 {
    #[serde(rename = "equipment")]
    pub equipment: i8,
    #[serde(rename = "itemUid")]
    pub item_uid: Option<i32>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject13 {
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject14 {
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: String,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "health")]
    pub health: String,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "skillPower")]
    pub skill_power: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "ultPower")]
    pub ult_power: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyHeroesEndpointsHeroAddedNotificationReturnsObject {
    #[serde(rename = "transactionHash")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "maxLevel")]
    pub max_level: i16,
    #[serde(rename = "status")]
    pub status: i32,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "isPending")]
    pub is_pending: bool,
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "toNextLevelExperience")]
    pub to_next_level_experience: i32,
    #[serde(rename = "toNextLevelScrolls")]
    pub to_next_level_scrolls: i32,
    #[serde(rename = "linkToExplorer")]
    pub link_to_explorer: String,
    #[serde(rename = "slots")]
    pub slots: Vec<LobbyHeroesEndpointsHeroAddedNotificationReturnsObject10>,
    #[serde(rename = "level")]
    pub level: i16,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "attributes")]
    pub attributes: LobbyHeroesEndpointsHeroAddedNotificationReturnsObject13,
    #[serde(rename = "equipmentAttributes")]
    pub equipment_attributes: LobbyHeroesEndpointsHeroAddedNotificationReturnsObject14,
    #[serde(rename = "blockId")]
    pub block_id: Option<String>,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyHeroesEndpointsHeroAddedNotification {
    pub returns: LobbyHeroesEndpointsHeroAddedNotificationReturnsObject,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyLobbyStartGame {}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyRegionsGetReturnsObject2 {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "host")]
    pub host: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyRegionsGetReturnsObject {
    #[serde(rename = "active")]
    pub active: String,
    #[serde(rename = "isFixed")]
    pub is_fixed: bool,
    #[serde(rename = "list")]
    pub list: Vec<LobbyRegionsGetReturnsObject2>,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyRegionsGet {
    pub returns: LobbyRegionsGetReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyRegionsSetParamsObject {
    #[serde(rename = "regionName")]
    pub region_name: String,
    #[serde(rename = "isFixed")]
    pub is_fixed: bool,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyRegionsSet {
    pub params: LobbyRegionsSetParamsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbySettingsGetReturnsObject {
    #[serde(rename = "language")]
    pub language: i8,
    #[serde(rename = "quality")]
    pub quality: i8,
    #[serde(rename = "HFREffects")]
    pub hfr_effects: i8,
    #[serde(rename = "isChanged")]
    pub is_changed: bool,
    #[serde(rename = "sounds")]
    pub sounds: bool,
    #[serde(rename = "music")]
    pub music: bool,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbySettingsGet {
    pub returns: LobbySettingsGetReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbySettingsSetParamsObject {
    #[serde(rename = "quality")]
    pub quality: i8,
    #[serde(rename = "sounds")]
    pub sounds: bool,
    #[serde(rename = "music")]
    pub music: bool,
    #[serde(rename = "language")]
    pub language: i8,
    #[serde(rename = "HFREffects")]
    pub hfr_effects: i8,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbySettingsSet {
    pub params: LobbySettingsSetParamsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeParamsObject {
    #[serde(rename = "personalType")]
    pub personal_type: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject2 {
    #[serde(rename = "level")]
    pub level: i32,
    #[serde(rename = "coefficient")]
    pub coefficient: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject3 {
    #[serde(rename = "level")]
    pub level: i32,
    #[serde(rename = "scrollsCount")]
    pub scrolls_count: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject {
    #[serde(rename = "agility")]
    pub agility: String,
    #[serde(rename = "intelligence")]
    pub intelligence: String,
    #[serde(rename = "experienceCoefficients")]
    pub experience_coefficients: Vec<LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject2>,
    #[serde(rename = "scrollsByLevels")]
    pub scrolls_by_levels: Vec<LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject3>,
    #[serde(rename = "baseScrollsCount")]
    pub base_scrolls_count: i32,
    #[serde(rename = "experience")]
    pub experience: i32,
    #[serde(rename = "strength")]
    pub strength: String,
    #[serde(rename = "maxLevel")]
    pub max_level: i32,
    #[serde(rename = "baseExperience")]
    pub base_experience: i32,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyStatsEndpointsGetLevelUpOptionsByPersonalType {
    pub params: LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeParamsObject,
    pub returns: LobbyStatsEndpointsGetLevelUpOptionsByPersonalTypeReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserGetUserDataReturnsObject {
    #[serde(rename = "tokensIncreaseBy")]
    pub tokens_increase_by: String,
    #[serde(rename = "placeInLeaderBoard")]
    pub place_in_leader_board: i32,
    #[serde(rename = "image")]
    pub image: i8,
    #[serde(rename = "decreaseBy")]
    pub decrease_by: i8,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "draw")]
    pub draw: i8,
    #[serde(rename = "rating")]
    pub rating: i32,
    #[serde(rename = "increaseBy")]
    pub increase_by: i8,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyUserGetUserData {
    pub returns: LobbyUserGetUserDataReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserUpdateUsernameParamsObject {
    #[serde(rename = "newUsername")]
    pub new_username: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserUpdateUsernameReturnsObject {
    #[serde(rename = "newUsername")]
    pub new_username: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyUserUpdateUsername {
    pub params: LobbyUserUpdateUsernameParamsObject,
    pub returns: LobbyUserUpdateUsernameReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserGetLeaderBoardParamsObject {
    #[serde(rename = "page")]
    pub page: i16,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserGetLeaderBoardReturnsObject2 {
    #[serde(rename = "place")]
    pub place: i32,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "rating")]
    pub rating: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserGetLeaderBoardReturnsObject {
    #[serde(rename = "page")]
    pub page: i16,
    #[serde(rename = "pages")]
    pub pages: i16,
    #[serde(rename = "leaderboard")]
    pub leaderboard: Vec<LobbyUserGetLeaderBoardReturnsObject2>,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyUserGetLeaderBoard {
    pub params: LobbyUserGetLeaderBoardParamsObject,
    pub returns: LobbyUserGetLeaderBoardReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserUpdateProfileImageParamsObject {
    #[serde(rename = "image")]
    pub image: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct LobbyUserUpdateProfileImageReturnsObject {
    #[serde(rename = "imageId")]
    pub image_id: i8,
}
#[derive(Debug, Serialize, Deserialize)]
struct LobbyUserUpdateProfileImage {
    pub params: LobbyUserUpdateProfileImageParamsObject,
    pub returns: LobbyUserUpdateProfileImageReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct MarketItemsGetLootboxesListReturnsObject0 {
    #[serde(rename = "productType")]
    pub product_type: String,
    #[serde(rename = "currencyType")]
    pub currency_type: String,
    #[serde(rename = "type")]
    pub rust_keyword_type: i32,
    #[serde(rename = "price")]
    pub price: String,
    #[serde(rename = "id")]
    pub id: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct MarketItemsGetLootboxesListReturnsObject {
    #[serde(rename = "product")]
    pub product: Vec<MarketItemsGetLootboxesListReturnsObject0>,
}
#[derive(Debug, Serialize, Deserialize)]
struct MarketItemsGetLootboxesList {
    pub returns: MarketItemsGetLootboxesListReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ProductFactoryLootboxTypeGetByLootboxIdParamsObject {
    #[serde(rename = "lootboxId")]
    pub lootbox_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ProductFactoryLootboxTypeGetByLootboxIdReturnsObject {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "dropChanceMultiplier")]
    pub drop_chance_multiplier: i32,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "lootboxId")]
    pub lootbox_id: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct ProductFactoryLootboxTypeGetByLootboxId {
    pub params: ProductFactoryLootboxTypeGetByLootboxIdParamsObject,
    pub returns: ProductFactoryLootboxTypeGetByLootboxIdReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ProductFactoryProductLootboxOpenedNotificationReturnsObject1 {
    #[serde(rename = "itemId")]
    pub item_id: i32,
    #[serde(rename = "type")]
    pub rust_keyword_type: i32,
    #[serde(rename = "amount")]
    pub amount: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ProductFactoryProductLootboxOpenedNotificationReturnsObject {
    #[serde(rename = "bindingId")]
    pub binding_id: i32,
    #[serde(rename = "rewards")]
    pub rewards: Vec<ProductFactoryProductLootboxOpenedNotificationReturnsObject1>,
}
#[derive(Debug, Serialize, Deserialize)]
struct ProductFactoryProductLootboxOpenedNotification {
    pub returns: ProductFactoryProductLootboxOpenedNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PromoCodesUseCodeParamsObject {
    #[serde(rename = "code")]
    pub code: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PromoCodesUseCodeReturnsObject {
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "currencyAmount")]
    pub currency_amount: String,
    #[serde(rename = "rewardType")]
    pub reward_type: String,
    #[serde(rename = "currencyKey")]
    pub currency_key: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct PromoCodesUseCode {
    pub params: PromoCodesUseCodeParamsObject,
    pub returns: Vec<PromoCodesUseCodeReturnsObject>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseBalanceUserBalanceChangedNotificationReturnsObject {
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "transactionHash")]
    pub transaction_hash: String,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "balance")]
    pub balance: String,
    #[serde(rename = "blockId")]
    pub block_id: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct PurchaseBalanceUserBalanceChangedNotification {
    pub returns: PurchaseBalanceUserBalanceChangedNotificationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseProductPurchaseLootboxParamsObject {
    #[serde(rename = "lootboxType")]
    pub lootbox_type: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct PurchaseProductPurchaseLootbox {
    pub params: PurchaseProductPurchaseLootboxParamsObject,
    pub returns: bool,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseProductGetHeroListReturnsObject1 {
    #[serde(rename = "strength")]
    pub strength: i32,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: i32,
    #[serde(rename = "ultPower")]
    pub ult_power: i32,
    #[serde(rename = "health")]
    pub health: i32,
    #[serde(rename = "skillPower")]
    pub skill_power: i32,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "intelligence")]
    pub intelligence: i32,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: i32,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: i32,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "agility")]
    pub agility: i32,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseProductGetHeroListReturnsObject {
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "stats")]
    pub stats: PurchaseProductGetHeroListReturnsObject1,
    #[serde(rename = "productType")]
    pub product_type: String,
    #[serde(rename = "heroId")]
    pub hero_id: i8,
    #[serde(rename = "price")]
    pub price: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct PurchaseProductGetHeroList {
    pub returns: Vec<PurchaseProductGetHeroListReturnsObject>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseProductGetEquipmentListReturnsObject4 {
    #[serde(rename = "mainCharacteristic")]
    pub main_characteristic: i8,
    #[serde(rename = "health")]
    pub health: i32,
    #[serde(rename = "healthRegenPercent")]
    pub health_regen_percent: String,
    #[serde(rename = "vampirismPower")]
    pub vampirism_power: String,
    #[serde(rename = "agility")]
    pub agility: i32,
    #[serde(rename = "skillEffectPower")]
    pub skill_effect_power: i32,
    #[serde(rename = "moveSpeed")]
    pub move_speed: String,
    #[serde(rename = "attackDamage")]
    pub attack_damage: i32,
    #[serde(rename = "ultPower")]
    pub ult_power: i32,
    #[serde(rename = "intelligence")]
    pub intelligence: i32,
    #[serde(rename = "armor")]
    pub armor: String,
    #[serde(rename = "attackReloadSpeed")]
    pub attack_reload_speed: String,
    #[serde(rename = "ultEffectPower")]
    pub ult_effect_power: i32,
    #[serde(rename = "strength")]
    pub strength: i32,
    #[serde(rename = "skillPower")]
    pub skill_power: i32,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseProductGetEquipmentListReturnsObject {
    #[serde(rename = "productType")]
    pub product_type: String,
    #[serde(rename = "price")]
    pub price: String,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "equipmentId")]
    pub equipment_id: i32,
    #[serde(rename = "stats")]
    pub stats: PurchaseProductGetEquipmentListReturnsObject4,
}
#[derive(Debug, Serialize, Deserialize)]
struct PurchaseProductGetEquipmentList {
    pub returns: Vec<PurchaseProductGetEquipmentListReturnsObject>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseWalletGetByUserIdReturnsObject {
    #[serde(rename = "address")]
    pub address: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct PurchaseWalletGetByUserId {
    pub returns: PurchaseWalletGetByUserIdReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseWalletGetWalletByUserIdParamsObject {
    #[serde(rename = "userId")]
    pub user_id: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PurchaseWalletGetWalletByUserIdReturnsObject {
    #[serde(rename = "address")]
    pub address: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct PurchaseWalletGetWalletByUserId {
    pub params: PurchaseWalletGetWalletByUserIdParamsObject,
    pub returns: PurchaseWalletGetWalletByUserIdReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetBalanceByUserIdParamsObject {
    #[serde(rename = "currency")]
    pub currency: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetBalanceByUserIdReturnsObject {
    #[serde(rename = "amount")]
    pub amount: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct TransactionsBalanceGetBalanceByUserId {
    pub params: TransactionsBalanceGetBalanceByUserIdParamsObject,
    pub returns: TransactionsBalanceGetBalanceByUserIdReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetBalancesByUserIdReturnsObject {
    #[serde(rename = "LIS")]
    pub lis: String,
    #[serde(rename = "ETH")]
    pub eth: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct TransactionsBalanceGetBalancesByUserId {
    pub returns: TransactionsBalanceGetBalancesByUserIdReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetBalancesByUserIdAsArrayReturnsObject {
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "currency")]
    pub currency: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct TransactionsBalanceGetBalancesByUserIdAsArray {
    pub returns: Vec<TransactionsBalanceGetBalancesByUserIdAsArrayReturnsObject>,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetListWithPaginationParamsObject {
    #[serde(rename = "page")]
    pub page: i16,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetListWithPaginationReturnsObject1 {
    #[serde(rename = "blockId")]
    pub block_id: String,
    #[serde(rename = "balanceChange")]
    pub balance_change: String,
    #[serde(rename = "dateTime")]
    pub date_time: String,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct TransactionsBalanceGetListWithPaginationReturnsObject {
    #[serde(rename = "pages")]
    pub pages: i16,
    #[serde(rename = "list")]
    pub list: Vec<TransactionsBalanceGetListWithPaginationReturnsObject1>,
    #[serde(rename = "page")]
    pub page: i16,
}
#[derive(Debug, Serialize, Deserialize)]
struct TransactionsBalanceGetListWithPagination {
    pub params: TransactionsBalanceGetListWithPaginationParamsObject,
    pub returns: TransactionsBalanceGetListWithPaginationReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct UserProfileGetMyProfileForBytesReturnsObject {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "isSubscribedToMailing")]
    pub is_subscribed_to_mailing: bool,
    #[serde(rename = "suspicious")]
    pub suspicious: bool,
    #[serde(rename = "notice")]
    pub notice: String,
    #[serde(rename = "isBanned")]
    pub is_banned: bool,
    #[serde(rename = "nickname")]
    pub nickname: String,
    #[serde(rename = "verified")]
    pub verified: bool,
    #[serde(rename = "isConfirmed")]
    pub is_confirmed: bool,
    #[serde(rename = "isDeleted")]
    pub is_deleted: bool,
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "isNicknameChanged")]
    pub is_nickname_changed: bool,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "registeredAt")]
    pub registered_at: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct UserProfileGetMyProfileForBytes {
    pub returns: UserProfileGetMyProfileForBytesReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct UserProfileGetTestDataReturnsObject {
    #[serde(rename = "hello")]
    pub hello: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct UserProfileGetTestData {
    pub returns: UserProfileGetTestDataReturnsObject,
}
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct OrchestratorLootboxPurchaseParamsObject {
    #[serde(rename = "personalType")]
    pub personal_type: String,
}
#[derive(Debug, Serialize, Deserialize)]
struct OrchestratorLootboxPurchase {
    pub params: OrchestratorLootboxPurchaseParamsObject,
    pub returns: bool,
}
